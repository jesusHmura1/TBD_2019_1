CREATE DATABASE  IF NOT EXISTS `TBD_2019_1` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `TBD_2019_1`;
-- MySQL dump 10.13  Distrib 8.0.16, for Win64 (x86_64)
--
-- Host: 127.0.0.1    Database: TBD_2019_1
-- ------------------------------------------------------
-- Server version	5.7.14-google

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
 SET NAMES utf8 ;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `ACUERDO`
--

DROP TABLE IF EXISTS `ACUERDO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `ACUERDO` (
  `ID_ACUERDO` int(11) NOT NULL AUTO_INCREMENT,
  `ID_PROPUESTA` int(11) NOT NULL,
  `ID_PROYECTO` int(11) NOT NULL,
  `FECHA_CREACION_ACUERDO` datetime NOT NULL,
  `FECHA_INICIO_TRABAJO` datetime NOT NULL,
  `FECHA_TERMINO_TENTATIVA` datetime NOT NULL,
  `FECHA_TERMINO_TRABAJO` datetime DEFAULT NULL,
  `FECHA_ACTUALIZACION_ACUERDO` datetime DEFAULT NULL,
  `ESTADO_ACUERDO` int(11) NOT NULL,
  `SOFT_DELETE_ACUERDO` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`ID_ACUERDO`),
  UNIQUE KEY `ID_ACUERDO_UNIQUE` (`ID_ACUERDO`),
  UNIQUE KEY `ID_PROPUESTA_UNIQUE` (`ID_PROPUESTA`),
  KEY `FK_RELATIONSHIP_20` (`ID_PROYECTO`),
  CONSTRAINT `FK_RELATIONSHIP_19` FOREIGN KEY (`ID_PROPUESTA`) REFERENCES `PROPUESTA` (`ID_PROPUESTA`),
  CONSTRAINT `FK_RELATIONSHIP_20` FOREIGN KEY (`ID_PROYECTO`) REFERENCES `PROYECTO` (`ID_PROYECTO`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ACUERDO`
--

LOCK TABLES `ACUERDO` WRITE;
/*!40000 ALTER TABLE `ACUERDO` DISABLE KEYS */;
INSERT INTO `ACUERDO` VALUES (1,4,1,'2019-07-04 23:51:46','2019-07-04 23:51:46','2019-07-05 00:00:00',NULL,'2019-07-04 23:51:46',2,0),(2,2,1,'2019-07-04 23:59:32','2019-07-04 23:59:32','2019-07-04 00:00:00',NULL,'2019-07-04 23:59:32',1,0),(4,5,2,'2019-07-05 01:34:18','2019-07-05 01:34:18','2019-07-07 00:00:00',NULL,'2019-07-05 01:34:18',1,0),(5,6,2,'2019-07-05 01:35:21','2019-07-05 01:35:21','2019-07-07 00:00:00',NULL,'2019-07-05 01:35:21',1,0);
/*!40000 ALTER TABLE `ACUERDO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ASIGNACION`
--

DROP TABLE IF EXISTS `ASIGNACION`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `ASIGNACION` (
  `ID_USUARIO` int(11) NOT NULL,
  `ID_GRUPO_PRIVILEGIO_USUARIO` int(11) NOT NULL,
  `HABILITADO` tinyint(1) NOT NULL,
  `ASIGNACION_USUARIO` varchar(10) NOT NULL,
  UNIQUE KEY `ASIGNACION_USUARIO_UNIQUE` (`ASIGNACION_USUARIO`),
  KEY `FK_RELATIONSHIP_14` (`ID_USUARIO`),
  KEY `FK_RELATIONSHIP_15` (`ID_GRUPO_PRIVILEGIO_USUARIO`),
  CONSTRAINT `FK_RELATIONSHIP_14` FOREIGN KEY (`ID_USUARIO`) REFERENCES `USUARIO` (`ID_USUARIO`),
  CONSTRAINT `FK_RELATIONSHIP_15` FOREIGN KEY (`ID_GRUPO_PRIVILEGIO_USUARIO`) REFERENCES `GRUPO_PRIVILEGIO_USUARIO` (`ID_GRUPO_PRIVILEGIO_USUARIO`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ASIGNACION`
--

LOCK TABLES `ASIGNACION` WRITE;
/*!40000 ALTER TABLE `ASIGNACION` DISABLE KEYS */;
INSERT INTO `ASIGNACION` VALUES (1,1,3,'11'),(1,2,3,'12'),(4,1,3,'41'),(7,1,3,'71'),(7,2,3,'72');
/*!40000 ALTER TABLE `ASIGNACION` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ASIGNACION_PRIVILEGIO`
--

DROP TABLE IF EXISTS `ASIGNACION_PRIVILEGIO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `ASIGNACION_PRIVILEGIO` (
  `ID_PRIVILEGIO` int(11) NOT NULL,
  `ID_GRUPO_PRIVILEGIO_USUARIO` int(11) NOT NULL,
  `TIMESTAMP_ASIGNACION_P` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  KEY `FK_RELATIONSHIP_48` (`ID_GRUPO_PRIVILEGIO_USUARIO`),
  KEY `FK_RELATIONSHIP_49` (`ID_PRIVILEGIO`),
  CONSTRAINT `FK_RELATIONSHIP_48` FOREIGN KEY (`ID_GRUPO_PRIVILEGIO_USUARIO`) REFERENCES `GRUPO_PRIVILEGIO_USUARIO` (`ID_GRUPO_PRIVILEGIO_USUARIO`),
  CONSTRAINT `FK_RELATIONSHIP_49` FOREIGN KEY (`ID_PRIVILEGIO`) REFERENCES `PRIVILEGIO` (`ID_PRIVILEGIO`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ASIGNACION_PRIVILEGIO`
--

LOCK TABLES `ASIGNACION_PRIVILEGIO` WRITE;
/*!40000 ALTER TABLE `ASIGNACION_PRIVILEGIO` DISABLE KEYS */;
INSERT INTO `ASIGNACION_PRIVILEGIO` VALUES (1,1,'2019-07-11 23:45:00'),(4,1,'2019-07-11 23:45:17'),(2,2,'2019-07-11 23:45:58'),(4,2,'2019-07-11 23:46:21'),(3,3,'2019-07-11 23:47:35'),(4,3,'2019-07-11 23:47:35');
/*!40000 ALTER TABLE `ASIGNACION_PRIVILEGIO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `BOLETA_FACTURA`
--

DROP TABLE IF EXISTS `BOLETA_FACTURA`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `BOLETA_FACTURA` (
  `ID_BOLETA` int(11) NOT NULL AUTO_INCREMENT,
  `ID_ACUERDO` int(11) NOT NULL,
  `ID_PAGO` int(11) DEFAULT NULL,
  `ID_PAIS` int(11) NOT NULL,
  `ID_ESTADO_BOLETA` int(11) NOT NULL,
  `MONTO_NETO_USD` float NOT NULL,
  `MONTO_NETO_LOCAL` float NOT NULL,
  `MONTO_IMPUESTO_LOCAL` float NOT NULL,
  `MONTO_ESTUDIANTE_LOCAL` float NOT NULL,
  `REFERENCIA_BOLETA` varchar(100) NOT NULL,
  `FECHA_BOLETA` datetime NOT NULL,
  PRIMARY KEY (`ID_BOLETA`),
  UNIQUE KEY `ID_BOLETA_UNIQUE` (`ID_BOLETA`),
  UNIQUE KEY `ID_PAGO_UNIQUE` (`ID_PAGO`),
  KEY `FK_RELATIONSHIP_21` (`ID_ACUERDO`),
  KEY `FK_RELATIONSHIP_24` (`ID_PAIS`),
  KEY `FK_RELATIONSHIP_37` (`ID_ESTADO_BOLETA`),
  CONSTRAINT `FK_RELATIONSHIP_21` FOREIGN KEY (`ID_ACUERDO`) REFERENCES `ACUERDO` (`ID_ACUERDO`),
  CONSTRAINT `FK_RELATIONSHIP_22` FOREIGN KEY (`ID_PAGO`) REFERENCES `PAGO` (`ID_PAGO`),
  CONSTRAINT `FK_RELATIONSHIP_24` FOREIGN KEY (`ID_PAIS`) REFERENCES `PAIS` (`ID_PAIS`),
  CONSTRAINT `FK_RELATIONSHIP_37` FOREIGN KEY (`ID_ESTADO_BOLETA`) REFERENCES `ESTADO_BOLETA` (`ID_ESTADO_BOLETA`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `BOLETA_FACTURA`
--

LOCK TABLES `BOLETA_FACTURA` WRITE;
/*!40000 ALTER TABLE `BOLETA_FACTURA` DISABLE KEYS */;
INSERT INTO `BOLETA_FACTURA` VALUES (1,1,NULL,1,1,10000,10000,10000,10000,'1234567890','2019-07-10 16:00:00');
/*!40000 ALTER TABLE `BOLETA_FACTURA` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `CALIFICACION_ESTUDIANTE`
--

DROP TABLE IF EXISTS `CALIFICACION_ESTUDIANTE`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `CALIFICACION_ESTUDIANTE` (
  `ID_CALIFICACION_ESTUDIANTE` int(11) NOT NULL AUTO_INCREMENT,
  `ID_ESTUDIANTE` int(11) NOT NULL,
  `CALIFICACION` int(11) NOT NULL DEFAULT '1',
  `COMENTARIO_CAL_ESTUDIANTE` text,
  `FECHA_INGRESO_CALIFICACION` datetime NOT NULL,
  PRIMARY KEY (`ID_CALIFICACION_ESTUDIANTE`),
  UNIQUE KEY `ID_CALIFICACION_ESTUDIANTE_UNIQUE` (`ID_CALIFICACION_ESTUDIANTE`),
  KEY `FK_RELATIONSHIP_33` (`ID_ESTUDIANTE`),
  CONSTRAINT `FK_RELATIONSHIP_33` FOREIGN KEY (`ID_ESTUDIANTE`) REFERENCES `ESTUDIANTE` (`ID_ESTUDIANTE`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `CALIFICACION_ESTUDIANTE`
--

LOCK TABLES `CALIFICACION_ESTUDIANTE` WRITE;
/*!40000 ALTER TABLE `CALIFICACION_ESTUDIANTE` DISABLE KEYS */;
INSERT INTO `CALIFICACION_ESTUDIANTE` VALUES (2,1,5,'excelente','2019-06-20 14:28:56'),(3,1,3,'excelente','2019-06-20 14:28:56');
/*!40000 ALTER TABLE `CALIFICACION_ESTUDIANTE` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `CALIFICACION_PROYECTO`
--

DROP TABLE IF EXISTS `CALIFICACION_PROYECTO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `CALIFICACION_PROYECTO` (
  `ID_CALIFICACION_PROYECTO` int(11) NOT NULL AUTO_INCREMENT,
  `ID_PROYECTO` int(11) NOT NULL,
  `CALIFICACION_PROYECTO` int(11) NOT NULL DEFAULT '1',
  `COMENTARIO_CAL_PROY` text,
  `FECHA_INGRESO_CAL_PROY` datetime NOT NULL,
  PRIMARY KEY (`ID_CALIFICACION_PROYECTO`),
  UNIQUE KEY `ID_CALIFICACION_PROYECTO_UNIQUE` (`ID_CALIFICACION_PROYECTO`),
  KEY `FK_RELATIONSHIP_45` (`ID_PROYECTO`),
  CONSTRAINT `FK_RELATIONSHIP_45` FOREIGN KEY (`ID_PROYECTO`) REFERENCES `PROYECTO` (`ID_PROYECTO`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `CALIFICACION_PROYECTO`
--

LOCK TABLES `CALIFICACION_PROYECTO` WRITE;
/*!40000 ALTER TABLE `CALIFICACION_PROYECTO` DISABLE KEYS */;
/*!40000 ALTER TABLE `CALIFICACION_PROYECTO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `CARGO`
--

DROP TABLE IF EXISTS `CARGO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `CARGO` (
  `ID_CARGO` int(11) NOT NULL AUTO_INCREMENT,
  `NOMBRE_CARGO` varchar(50) NOT NULL,
  `DESCRIPCION_CARGO` text,
  PRIMARY KEY (`ID_CARGO`),
  UNIQUE KEY `ID_CARGO_UNIQUE` (`ID_CARGO`),
  UNIQUE KEY `NOMBRE_CARGO_UNIQUE` (`NOMBRE_CARGO`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `CARGO`
--

LOCK TABLES `CARGO` WRITE;
/*!40000 ALTER TABLE `CARGO` DISABLE KEYS */;
INSERT INTO `CARGO` VALUES (1,'Gerente','gerente de empresa'),(2,'Particular','sin empresa, persona natural'),(3,'Administracion','NN'),(4,'Jefe de Proyectos TI','jefe de seccion TI');
/*!40000 ALTER TABLE `CARGO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `CATEGORIA`
--

DROP TABLE IF EXISTS `CATEGORIA`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `CATEGORIA` (
  `ID_CATEGORIA` int(11) NOT NULL AUTO_INCREMENT,
  `NOMBRE_CATEGORIA_HAB` varchar(50) NOT NULL,
  `DESCRIPCION_CATEGORIA` text,
  PRIMARY KEY (`ID_CATEGORIA`),
  UNIQUE KEY `ID_CATEGORIA_UNIQUE` (`ID_CATEGORIA`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `CATEGORIA`
--

LOCK TABLES `CATEGORIA` WRITE;
/*!40000 ALTER TABLE `CATEGORIA` DISABLE KEYS */;
/*!40000 ALTER TABLE `CATEGORIA` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `CATEGORIA_HABILIDAD`
--

DROP TABLE IF EXISTS `CATEGORIA_HABILIDAD`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `CATEGORIA_HABILIDAD` (
  `ID_CATEGORIA` int(11) NOT NULL,
  `ID_HABILIDAD` int(11) NOT NULL,
  `TIMESTAMP_CAT_HAB` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  KEY `FK_RELATIONSHIP_28` (`ID_HABILIDAD`),
  KEY `FK_RELATIONSHIP_29` (`ID_CATEGORIA`),
  CONSTRAINT `FK_RELATIONSHIP_28` FOREIGN KEY (`ID_HABILIDAD`) REFERENCES `HABILIDAD` (`ID_HABILIDAD`),
  CONSTRAINT `FK_RELATIONSHIP_29` FOREIGN KEY (`ID_CATEGORIA`) REFERENCES `CATEGORIA` (`ID_CATEGORIA`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `CATEGORIA_HABILIDAD`
--

LOCK TABLES `CATEGORIA_HABILIDAD` WRITE;
/*!40000 ALTER TABLE `CATEGORIA_HABILIDAD` DISABLE KEYS */;
/*!40000 ALTER TABLE `CATEGORIA_HABILIDAD` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `CIUDAD`
--

DROP TABLE IF EXISTS `CIUDAD`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `CIUDAD` (
  `ID_CIUDAD` int(11) NOT NULL AUTO_INCREMENT,
  `ID_REGION` int(11) DEFAULT NULL,
  `ID_PAIS` int(11) NOT NULL,
  `NOMBRE_CIUDAD` varchar(50) NOT NULL,
  `CODIGO_POSTAL` varchar(15) NOT NULL,
  PRIMARY KEY (`ID_CIUDAD`),
  UNIQUE KEY `ID_CIUDAD_UNIQUE` (`ID_CIUDAD`),
  KEY `FK_RELATIONSHIP_10` (`ID_PAIS`),
  KEY `FK_RELATIONSHIP_12` (`ID_REGION`),
  CONSTRAINT `FK_RELATIONSHIP_10` FOREIGN KEY (`ID_PAIS`) REFERENCES `PAIS` (`ID_PAIS`),
  CONSTRAINT `FK_RELATIONSHIP_12` FOREIGN KEY (`ID_REGION`) REFERENCES `REGION_ESTADO` (`ID_REGION`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `CIUDAD`
--

LOCK TABLES `CIUDAD` WRITE;
/*!40000 ALTER TABLE `CIUDAD` DISABLE KEYS */;
INSERT INTO `CIUDAD` VALUES (1,NULL,1,'Santiago','9100000'),(2,NULL,1,'Valparaiso','9400000'),(3,NULL,2,'Buenos Aires','4842020');
/*!40000 ALTER TABLE `CIUDAD` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `COMISION_RANGO_PROYECTO`
--

DROP TABLE IF EXISTS `COMISION_RANGO_PROYECTO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `COMISION_RANGO_PROYECTO` (
  `ID_COMISION` int(11) NOT NULL AUTO_INCREMENT,
  `NOMBRE_COMISION` varchar(50) NOT NULL,
  `PORCENTAJE_COMISION` float NOT NULL,
  `FECHA_ACTUALIZACION_COMISION` datetime DEFAULT NULL,
  PRIMARY KEY (`ID_COMISION`),
  UNIQUE KEY `ID_COMISION_UNIQUE` (`ID_COMISION`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `COMISION_RANGO_PROYECTO`
--

LOCK TABLES `COMISION_RANGO_PROYECTO` WRITE;
/*!40000 ALTER TABLE `COMISION_RANGO_PROYECTO` DISABLE KEYS */;
INSERT INTO `COMISION_RANGO_PROYECTO` VALUES (1,'Utabbqua juccunvnkhprpl tc',0.55,'2018-01-01 00:00:00'),(2,'Glkjxd atwuuwowpq',1.1,'2018-06-15 10:29:50'),(3,'Ctlpfwriqonliuochg',0,'2018-10-08 19:08:49');
/*!40000 ALTER TABLE `COMISION_RANGO_PROYECTO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `CONVERSION_MONEDA`
--

DROP TABLE IF EXISTS `CONVERSION_MONEDA`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `CONVERSION_MONEDA` (
  `ID__CONVERSION_MONEDA` int(11) NOT NULL AUTO_INCREMENT,
  `ID_PAIS` int(11) NOT NULL,
  `NOMBRE_MONEDA` varchar(50) NOT NULL,
  `CONVERSION_USD` float NOT NULL,
  `FECHA_CONVERSION` datetime NOT NULL,
  PRIMARY KEY (`ID__CONVERSION_MONEDA`),
  UNIQUE KEY `ID__CONVERSION_MONEDA_UNIQUE` (`ID__CONVERSION_MONEDA`),
  KEY `FK_RELATIONSHIP_13` (`ID_PAIS`),
  CONSTRAINT `FK_RELATIONSHIP_13` FOREIGN KEY (`ID_PAIS`) REFERENCES `PAIS` (`ID_PAIS`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `CONVERSION_MONEDA`
--

LOCK TABLES `CONVERSION_MONEDA` WRITE;
/*!40000 ALTER TABLE `CONVERSION_MONEDA` DISABLE KEYS */;
INSERT INTO `CONVERSION_MONEDA` VALUES (1,1,'peso',670,'2019-07-11 00:00:00'),(2,1,'peso',680,'2019-06-01 00:00:00'),(3,1,'peso',677,'2018-12-12 00:00:00'),(4,4,'USD',1,'2018-12-12 00:00:00');
/*!40000 ALTER TABLE `CONVERSION_MONEDA` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `DEPARTAMENTO`
--

DROP TABLE IF EXISTS `DEPARTAMENTO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `DEPARTAMENTO` (
  `ID_DEPARTAMENTO` int(11) NOT NULL AUTO_INCREMENT,
  `ID_UNIVERSIDAD` int(11) NOT NULL,
  `NOMBRE_DEPARTAMENTO` varchar(50) NOT NULL,
  PRIMARY KEY (`ID_DEPARTAMENTO`),
  UNIQUE KEY `ID_DEPARTAMENTO_UNIQUE` (`ID_DEPARTAMENTO`),
  KEY `FK_RELATIONSHIP_6` (`ID_UNIVERSIDAD`),
  CONSTRAINT `FK_RELATIONSHIP_6` FOREIGN KEY (`ID_UNIVERSIDAD`) REFERENCES `UNIVERSIDAD` (`ID_UNIVERSIDAD`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `DEPARTAMENTO`
--

LOCK TABLES `DEPARTAMENTO` WRITE;
/*!40000 ALTER TABLE `DEPARTAMENTO` DISABLE KEYS */;
INSERT INTO `DEPARTAMENTO` VALUES (1,1,'aquiestaelcambio'),(2,2,'Ingenieria Informatica'),(3,2,'Diseño y Comunicacion'),(4,2,'Facultad Tecnologica'),(5,1,'Telecomunicaciones');
/*!40000 ALTER TABLE `DEPARTAMENTO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `DIRECCION`
--

DROP TABLE IF EXISTS `DIRECCION`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `DIRECCION` (
  `ID_DIRECCION` int(11) NOT NULL AUTO_INCREMENT,
  `ID_CIUDAD` int(11) NOT NULL,
  `ID_UNIVERSIDAD` int(11) DEFAULT NULL,
  `CALLE` varchar(50) NOT NULL,
  `NUMERO` varchar(10) NOT NULL,
  `DEPARTAMENTO` varchar(10) DEFAULT NULL,
  `TIPO_DIRECCION` int(11) NOT NULL,
  PRIMARY KEY (`ID_DIRECCION`),
  UNIQUE KEY `ID_DIRECCION_UNIQUE` (`ID_DIRECCION`),
  KEY `FK_RELATIONSHIP_32` (`ID_UNIVERSIDAD`),
  KEY `FK_RELATIONSHIP_9` (`ID_CIUDAD`),
  CONSTRAINT `FK_RELATIONSHIP_32` FOREIGN KEY (`ID_UNIVERSIDAD`) REFERENCES `UNIVERSIDAD` (`ID_UNIVERSIDAD`),
  CONSTRAINT `FK_RELATIONSHIP_9` FOREIGN KEY (`ID_CIUDAD`) REFERENCES `CIUDAD` (`ID_CIUDAD`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `DIRECCION`
--

LOCK TABLES `DIRECCION` WRITE;
/*!40000 ALTER TABLE `DIRECCION` DISABLE KEYS */;
INSERT INTO `DIRECCION` VALUES (1,1,NULL,'evergreen','742',NULL,0),(2,1,1,'Ecuador','200',NULL,1),(3,1,1,'prueba','1234','',1),(4,1,1,'prueba123','1234','',1),(5,1,1,'correcto','3456aq','1234',1),(6,1,1,'nueva','123456','1234',1),(7,1,1,'nueva','2041','',0),(8,1,1,'nueva','2041','',1),(9,1,1,'calle','2051','',1);
/*!40000 ALTER TABLE `DIRECCION` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `DIRECCION_USUARIO`
--

DROP TABLE IF EXISTS `DIRECCION_USUARIO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `DIRECCION_USUARIO` (
  `ID_DIRECCION_USUARIO` int(11) NOT NULL AUTO_INCREMENT,
  `ID_USUARIO` int(11) NOT NULL,
  `ID_DIRECCION` int(11) NOT NULL,
  `DIRECCION_HABILITADA` tinyint(1) NOT NULL DEFAULT '1',
  `DIRECCION_FACTURACION` tinyint(1) NOT NULL,
  PRIMARY KEY (`ID_DIRECCION_USUARIO`),
  UNIQUE KEY `ID_DIRECCION_USUARIO_UNIQUE` (`ID_DIRECCION_USUARIO`),
  KEY `FK_RELATIONSHIP_43` (`ID_DIRECCION`),
  KEY `FK_RELATIONSHIP_44` (`ID_USUARIO`),
  CONSTRAINT `FK_RELATIONSHIP_43` FOREIGN KEY (`ID_DIRECCION`) REFERENCES `DIRECCION` (`ID_DIRECCION`),
  CONSTRAINT `FK_RELATIONSHIP_44` FOREIGN KEY (`ID_USUARIO`) REFERENCES `USUARIO` (`ID_USUARIO`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `DIRECCION_USUARIO`
--

LOCK TABLES `DIRECCION_USUARIO` WRITE;
/*!40000 ALTER TABLE `DIRECCION_USUARIO` DISABLE KEYS */;
INSERT INTO `DIRECCION_USUARIO` VALUES (1,1,1,1,1),(2,3,1,0,1),(4,2,6,1,1),(7,1,6,1,0),(8,1,6,1,1),(9,1,8,1,0),(10,1,9,1,0);
/*!40000 ALTER TABLE `DIRECCION_USUARIO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `EMPRESA`
--

DROP TABLE IF EXISTS `EMPRESA`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `EMPRESA` (
  `ID_EMPRESA` int(11) NOT NULL AUTO_INCREMENT,
  `RAZON_SOCIAL` varchar(50) NOT NULL,
  `RUN` varchar(20) NOT NULL,
  PRIMARY KEY (`ID_EMPRESA`),
  UNIQUE KEY `ID_EMPRESA_UNIQUE` (`ID_EMPRESA`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `EMPRESA`
--

LOCK TABLES `EMPRESA` WRITE;
/*!40000 ALTER TABLE `EMPRESA` DISABLE KEYS */;
INSERT INTO `EMPRESA` VALUES (1,'TecnoFlash','11457521-3');
/*!40000 ALTER TABLE `EMPRESA` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ESTADO_BOLETA`
--

DROP TABLE IF EXISTS `ESTADO_BOLETA`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `ESTADO_BOLETA` (
  `ID_ESTADO_BOLETA` int(11) NOT NULL AUTO_INCREMENT,
  `NOMBRE_ESTADO_BOLETA` varchar(50) NOT NULL,
  `DESRCIPCION_EST_BOLETA` text NOT NULL,
  PRIMARY KEY (`ID_ESTADO_BOLETA`),
  UNIQUE KEY `ID_ESTADO_BOLETA_UNIQUE` (`ID_ESTADO_BOLETA`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ESTADO_BOLETA`
--

LOCK TABLES `ESTADO_BOLETA` WRITE;
/*!40000 ALTER TABLE `ESTADO_BOLETA` DISABLE KEYS */;
INSERT INTO `ESTADO_BOLETA` VALUES (1,'Emitida','La boleta ha sido emitida'),(2,'Pagado','La boleta ha sido pagada'),(3,'Rechazado','El pago a sido rechazado');
/*!40000 ALTER TABLE `ESTADO_BOLETA` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ESTADO_ESTUDIANTE`
--

DROP TABLE IF EXISTS `ESTADO_ESTUDIANTE`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `ESTADO_ESTUDIANTE` (
  `ID_ESTADO_ESTUDIANTE` int(11) NOT NULL AUTO_INCREMENT,
  `NOMBRE_ESTADO_ESTUDIANTE` varchar(50) NOT NULL,
  `DESCRIPCION_EST_ESTUDIANTE` text,
  PRIMARY KEY (`ID_ESTADO_ESTUDIANTE`),
  UNIQUE KEY `ID_ESTADO_ESTUDIANTE_UNIQUE` (`ID_ESTADO_ESTUDIANTE`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ESTADO_ESTUDIANTE`
--

LOCK TABLES `ESTADO_ESTUDIANTE` WRITE;
/*!40000 ALTER TABLE `ESTADO_ESTUDIANTE` DISABLE KEYS */;
INSERT INTO `ESTADO_ESTUDIANTE` VALUES (1,'Matriculado',NULL),(2,'En Espera de matricula','Esperando confimacion de matricula'),(3,'Eliminado','Alumno que dejo la universidad'),(4,'Retiro Temporal','Alumno que congelo sus estudios'),(5,'Expulsado',NULL),(6,'Egresado','Alumno que termino su carrera');
/*!40000 ALTER TABLE `ESTADO_ESTUDIANTE` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ESTADO_PROYECTO`
--

DROP TABLE IF EXISTS `ESTADO_PROYECTO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `ESTADO_PROYECTO` (
  `ID_ESTADO_PROYECTO` int(11) NOT NULL AUTO_INCREMENT,
  `NOMBRE_ESTADO_PROY` varchar(50) NOT NULL,
  `DESCRIPCION_EST_PROYECTO` text NOT NULL,
  PRIMARY KEY (`ID_ESTADO_PROYECTO`),
  UNIQUE KEY `ID_ESTADO_PROYECTO_UNIQUE` (`ID_ESTADO_PROYECTO`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ESTADO_PROYECTO`
--

LOCK TABLES `ESTADO_PROYECTO` WRITE;
/*!40000 ALTER TABLE `ESTADO_PROYECTO` DISABLE KEYS */;
INSERT INTO `ESTADO_PROYECTO` VALUES (1,'En espera','Proyecto en espera de propuestas');
/*!40000 ALTER TABLE `ESTADO_PROYECTO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ESTUDIANTE`
--

DROP TABLE IF EXISTS `ESTUDIANTE`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `ESTUDIANTE` (
  `ID_ESTUDIANTE` int(11) NOT NULL AUTO_INCREMENT,
  `ID_DEPARTAMENTO` int(11) NOT NULL,
  `ID_ESTADO_ESTUDIANTE` int(11) NOT NULL,
  `ID_USUARIO` int(11) NOT NULL,
  `NUMERO_MATRICULA` varchar(20) NOT NULL,
  `ANO_INGRESO` int(11) NOT NULL,
  `CARRERA` varchar(100) NOT NULL,
  `CODIGO_ESTUDIANTE` varchar(30) NOT NULL,
  PRIMARY KEY (`ID_ESTUDIANTE`),
  UNIQUE KEY `ID_ESTUDIANTE_UNIQUE` (`ID_ESTUDIANTE`),
  UNIQUE KEY `ID_USUARIO_UNIQUE` (`ID_USUARIO`),
  UNIQUE KEY `CODIGO_ESTUDIANTE_UNIQUE` (`CODIGO_ESTUDIANTE`),
  KEY `FK_RELATIONSHIP_31` (`ID_DEPARTAMENTO`),
  KEY `FK_RELATIONSHIP_36` (`ID_ESTADO_ESTUDIANTE`),
  CONSTRAINT `FK_RELATIONSHIP_2` FOREIGN KEY (`ID_USUARIO`) REFERENCES `USUARIO` (`ID_USUARIO`),
  CONSTRAINT `FK_RELATIONSHIP_31` FOREIGN KEY (`ID_DEPARTAMENTO`) REFERENCES `DEPARTAMENTO` (`ID_DEPARTAMENTO`),
  CONSTRAINT `FK_RELATIONSHIP_36` FOREIGN KEY (`ID_ESTADO_ESTUDIANTE`) REFERENCES `ESTADO_ESTUDIANTE` (`ID_ESTADO_ESTUDIANTE`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ESTUDIANTE`
--

LOCK TABLES `ESTUDIANTE` WRITE;
/*!40000 ALTER TABLE `ESTUDIANTE` DISABLE KEYS */;
INSERT INTO `ESTUDIANTE` VALUES (1,1,1,1,'98765432',9876,'cambio nombre','USACH98765432'),(2,2,1,2,'2548621-k',2019,'Ingenieria Informatica','APLAPLAC2548621-k'),(3,4,3,3,'1235458-4',2018,'Analista Programador','APLAPLAC1235458-4'),(8,1,1,5,'12345678',2005,'WFSDJKM','USACH12345678'),(14,1,1,6,'189213314',2010,'prueba','USACH189213314'),(15,1,1,7,'12345679',2010,'prueba','USACH12345679'),(17,2,1,23,'14578521K',2002,'a','APLAPLAC14578521K');
/*!40000 ALTER TABLE `ESTUDIANTE` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `GRUPO_PRIVILEGIO_USUARIO`
--

DROP TABLE IF EXISTS `GRUPO_PRIVILEGIO_USUARIO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `GRUPO_PRIVILEGIO_USUARIO` (
  `ID_GRUPO_PRIVILEGIO_USUARIO` int(11) NOT NULL AUTO_INCREMENT,
  `NOMBRE_GRUPO` varchar(50) NOT NULL,
  PRIMARY KEY (`ID_GRUPO_PRIVILEGIO_USUARIO`),
  UNIQUE KEY `ID_GRUPO_PRIVILEGIO_USUARIO_UNIQUE` (`ID_GRUPO_PRIVILEGIO_USUARIO`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `GRUPO_PRIVILEGIO_USUARIO`
--

LOCK TABLES `GRUPO_PRIVILEGIO_USUARIO` WRITE;
/*!40000 ALTER TABLE `GRUPO_PRIVILEGIO_USUARIO` DISABLE KEYS */;
INSERT INTO `GRUPO_PRIVILEGIO_USUARIO` VALUES (1,'estudiante'),(2,'representante'),(3,'administrador');
/*!40000 ALTER TABLE `GRUPO_PRIVILEGIO_USUARIO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `HABILIDAD`
--

DROP TABLE IF EXISTS `HABILIDAD`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `HABILIDAD` (
  `ID_HABILIDAD` int(11) NOT NULL AUTO_INCREMENT,
  `NOMBRE_HABILIDAD` varchar(50) NOT NULL,
  `DESCRIPCION_HABILIDAD` text,
  `DIFICULTAD_HABILIDAD` int(11) NOT NULL DEFAULT '1',
  PRIMARY KEY (`ID_HABILIDAD`),
  UNIQUE KEY `ID_HABILIDAD_UNIQUE` (`ID_HABILIDAD`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `HABILIDAD`
--

LOCK TABLES `HABILIDAD` WRITE;
/*!40000 ALTER TABLE `HABILIDAD` DISABLE KEYS */;
INSERT INTO `HABILIDAD` VALUES (1,'Javascript','lenguaje de programacion web',4),(2,'MySQL','Lenguaje Sql para base de datos',5),(3,'HTML5','Lenguaje de programacion para paginas web',2),(4,'Python',NULL,6),(5,'Malbolge','En el infierno de los programadores se trabaja con Malbolge.',10);
/*!40000 ALTER TABLE `HABILIDAD` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `HABILIDAD_ESTUDIANTE`
--

DROP TABLE IF EXISTS `HABILIDAD_ESTUDIANTE`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `HABILIDAD_ESTUDIANTE` (
  `ID_HABILIDAD_ESTUDIANTE` int(11) NOT NULL AUTO_INCREMENT,
  `ID_ESTUDIANTE` int(11) NOT NULL,
  `ID_HABILIDAD` int(11) NOT NULL,
  `DOMINIO_HABILIDAD` int(11) NOT NULL,
  `FECHA_ACTUALIZACION_HAB_ESTUDIANTE` datetime DEFAULT NULL,
  PRIMARY KEY (`ID_HABILIDAD_ESTUDIANTE`),
  UNIQUE KEY `ID_HABILIDAD_ESTUDIANTE_UNIQUE` (`ID_HABILIDAD_ESTUDIANTE`),
  KEY `FK_RELATIONSHIP_41` (`ID_ESTUDIANTE`),
  KEY `FK_RELATIONSHIP_42` (`ID_HABILIDAD`),
  CONSTRAINT `FK_RELATIONSHIP_41` FOREIGN KEY (`ID_ESTUDIANTE`) REFERENCES `ESTUDIANTE` (`ID_ESTUDIANTE`),
  CONSTRAINT `FK_RELATIONSHIP_42` FOREIGN KEY (`ID_HABILIDAD`) REFERENCES `HABILIDAD` (`ID_HABILIDAD`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `HABILIDAD_ESTUDIANTE`
--

LOCK TABLES `HABILIDAD_ESTUDIANTE` WRITE;
/*!40000 ALTER TABLE `HABILIDAD_ESTUDIANTE` DISABLE KEYS */;
INSERT INTO `HABILIDAD_ESTUDIANTE` VALUES (2,3,2,4,NULL),(3,1,1,1,NULL),(4,1,4,3,NULL),(5,1,1,4,'2019-06-20 03:15:01');
/*!40000 ALTER TABLE `HABILIDAD_ESTUDIANTE` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `HABILIDAD_REQUERIDA`
--

DROP TABLE IF EXISTS `HABILIDAD_REQUERIDA`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `HABILIDAD_REQUERIDA` (
  `ID_REQUERIMIENTO` int(11) NOT NULL,
  `ID_HABILIDAD` int(11) NOT NULL,
  `TIMEESTAM_HAB_REQ` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  KEY `FK_RELATIONSHIP_26` (`ID_REQUERIMIENTO`),
  KEY `FK_RELATIONSHIP_27` (`ID_HABILIDAD`),
  CONSTRAINT `FK_RELATIONSHIP_26` FOREIGN KEY (`ID_REQUERIMIENTO`) REFERENCES `REQUERIMIENTO` (`ID_REQUERIMIENTO`),
  CONSTRAINT `FK_RELATIONSHIP_27` FOREIGN KEY (`ID_HABILIDAD`) REFERENCES `HABILIDAD` (`ID_HABILIDAD`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `HABILIDAD_REQUERIDA`
--

LOCK TABLES `HABILIDAD_REQUERIDA` WRITE;
/*!40000 ALTER TABLE `HABILIDAD_REQUERIDA` DISABLE KEYS */;
INSERT INTO `HABILIDAD_REQUERIDA` VALUES (1,1,'2019-07-05 00:04:30'),(1,2,'2019-07-05 00:05:48'),(1,3,'2019-07-05 00:13:37');
/*!40000 ALTER TABLE `HABILIDAD_REQUERIDA` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `IMPUESTO`
--

DROP TABLE IF EXISTS `IMPUESTO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `IMPUESTO` (
  `ID_IMPUESTO` int(11) NOT NULL AUTO_INCREMENT,
  `ID_PAIS` int(11) NOT NULL,
  `NOMBRE_IMPUESTO` varchar(50) NOT NULL,
  `PORCENTAJE_IMPUESTO` float NOT NULL,
  `FECHA_ACTUALIZACION_IMPUESTO` datetime NOT NULL,
  PRIMARY KEY (`ID_IMPUESTO`),
  UNIQUE KEY `ID_IMPUESTO_UNIQUE` (`ID_IMPUESTO`),
  KEY `FK_RELATIONSHIP_50` (`ID_PAIS`),
  CONSTRAINT `FK_RELATIONSHIP_50` FOREIGN KEY (`ID_PAIS`) REFERENCES `PAIS` (`ID_PAIS`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `IMPUESTO`
--

LOCK TABLES `IMPUESTO` WRITE;
/*!40000 ALTER TABLE `IMPUESTO` DISABLE KEYS */;
INSERT INTO `IMPUESTO` VALUES (3,2,'IVA',19,'2019-06-20 20:42:42'),(5,1,'IVA',19,'2019-06-20 20:43:37'),(7,3,'POR',7.5,'2019-06-20 20:51:31'),(12,1,'PORQUESI',1.1,'2019-06-20 21:55:14'),(18,1,'lala',9.8,'2019-06-20 23:59:23'),(19,1,'lala',9.8,'2019-06-21 00:00:10');
/*!40000 ALTER TABLE `IMPUESTO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `PAGO`
--

DROP TABLE IF EXISTS `PAGO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `PAGO` (
  `ID_PAGO` int(11) NOT NULL AUTO_INCREMENT,
  `ID_BOLETA` int(11) NOT NULL,
  `MONTO_PAGO` float NOT NULL,
  `FECHA_EMISION` datetime NOT NULL,
  `ESTADO_PAGO` int(11) NOT NULL,
  `SOFT_DELETE_PAGO` tinyint(1) NOT NULL,
  PRIMARY KEY (`ID_PAGO`),
  UNIQUE KEY `ID_PAGO_UNIQUE` (`ID_PAGO`),
  UNIQUE KEY `ID_BOLETA_UNIQUE` (`ID_BOLETA`),
  CONSTRAINT `FK_RELATIONSHIP_23` FOREIGN KEY (`ID_BOLETA`) REFERENCES `BOLETA_FACTURA` (`ID_BOLETA`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `PAGO`
--

LOCK TABLES `PAGO` WRITE;
/*!40000 ALTER TABLE `PAGO` DISABLE KEYS */;
INSERT INTO `PAGO` VALUES (1,1,10000,'2019-07-10 16:01:00',1,0);
/*!40000 ALTER TABLE `PAGO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `PAIS`
--

DROP TABLE IF EXISTS `PAIS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `PAIS` (
  `ID_PAIS` int(11) NOT NULL AUTO_INCREMENT,
  `NOMBRE_PAIS` varchar(50) NOT NULL,
  `CODIGO_PAIS` varchar(10) NOT NULL,
  PRIMARY KEY (`ID_PAIS`),
  UNIQUE KEY `ID_PAIS_UNIQUE` (`ID_PAIS`),
  UNIQUE KEY `CODIGO_PAIS_UNIQUE` (`CODIGO_PAIS`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `PAIS`
--

LOCK TABLES `PAIS` WRITE;
/*!40000 ALTER TABLE `PAIS` DISABLE KEYS */;
INSERT INTO `PAIS` VALUES (1,'Chile','CL'),(2,'Argentina','AR'),(3,'Brasil','BR'),(4,'EEUU','US'),(5,'Peru','PE'),(6,'Paraguay','PY'),(7,'España','ES'),(8,'Francia','FR'),(9,'Canada','CA');
/*!40000 ALTER TABLE `PAIS` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `PRIVILEGIO`
--

DROP TABLE IF EXISTS `PRIVILEGIO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `PRIVILEGIO` (
  `ID_PRIVILEGIO` int(11) NOT NULL AUTO_INCREMENT,
  `NOMBRE_PRIVILEGIO` varchar(50) NOT NULL,
  `DESCRIPCION_PRIVILEGIO` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`ID_PRIVILEGIO`),
  UNIQUE KEY `ID_PRIVILEGIO_UNIQUE` (`ID_PRIVILEGIO`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `PRIVILEGIO`
--

LOCK TABLES `PRIVILEGIO` WRITE;
/*!40000 ALTER TABLE `PRIVILEGIO` DISABLE KEYS */;
INSERT INTO `PRIVILEGIO` VALUES (1,'Estudiante','Descripción del privilegio para Estudiante'),(2,'Representante','Descripción del privilegio para Administrador'),(3,'Administrador','Descripción del privilegio para Representante'),(4,'Usuario','Descripción del privilegio para Usuario');
/*!40000 ALTER TABLE `PRIVILEGIO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `PROPUESTA`
--

DROP TABLE IF EXISTS `PROPUESTA`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `PROPUESTA` (
  `ID_PROPUESTA` int(11) NOT NULL AUTO_INCREMENT,
  `ID_ACUERDO` int(11) DEFAULT NULL,
  `ID_ESTUDIANTE` int(11) NOT NULL,
  `DESCRIPCION_PROPUESTA` text NOT NULL,
  `FECHA_CREACION_PROPUESTA` datetime NOT NULL,
  `PLAZO_PROPUESTA` int(11) NOT NULL,
  `VALOR_PROPUESTA_USD` float NOT NULL,
  `ESTADO_PROPUESTA` int(11) NOT NULL,
  `SOFT_DELETE_PROPUESTA` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`ID_PROPUESTA`),
  UNIQUE KEY `ID_PROPUESTA_UNIQUE` (`ID_PROPUESTA`),
  UNIQUE KEY `ID_ACUERDO_UNIQUE` (`ID_ACUERDO`),
  KEY `FK_RELATIONSHIP_16` (`ID_ESTUDIANTE`),
  CONSTRAINT `FK_RELATIONSHIP_16` FOREIGN KEY (`ID_ESTUDIANTE`) REFERENCES `ESTUDIANTE` (`ID_ESTUDIANTE`),
  CONSTRAINT `FK_RELATIONSHIP_18` FOREIGN KEY (`ID_ACUERDO`) REFERENCES `ACUERDO` (`ID_ACUERDO`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `PROPUESTA`
--

LOCK TABLES `PROPUESTA` WRITE;
/*!40000 ALTER TABLE `PROPUESTA` DISABLE KEYS */;
INSERT INTO `PROPUESTA` VALUES (2,NULL,1,'soy el mejor!','2019-06-20 15:44:41',30,1000000,0,1),(3,NULL,1,'','2019-06-20 23:49:03',-15,-100,0,1),(4,1,1,'prueba prueba','2019-07-04 23:51:46',30,50000,1,0),(5,4,17,'Mi propuesta es la mejor','2019-07-05 01:34:18',5,5000,1,0),(6,5,17,'Mi propuesta es la mejor','2019-07-05 01:35:21',5,5000,1,0);
/*!40000 ALTER TABLE `PROPUESTA` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `PROYECTO`
--

DROP TABLE IF EXISTS `PROYECTO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `PROYECTO` (
  `ID_PROYECTO` int(11) NOT NULL AUTO_INCREMENT,
  `ID_REPRESENTANTE` int(11) NOT NULL,
  `ID_ESTADO_PROYECTO` int(11) NOT NULL,
  `ID_RANGO_COSTO` int(11) NOT NULL,
  `NOMBRE_PROYECTO` varchar(50) NOT NULL,
  `FECHA__CREACION_PROYECTO` datetime NOT NULL,
  `DESCRIPCION_PROYECTO` text NOT NULL,
  `PLAZO_MAXIMO` int(11) NOT NULL,
  `PLAZO_MINIMO` int(11) DEFAULT NULL,
  `FECHA_ACTUALIZAION_PROYECTO` datetime DEFAULT NULL,
  `SOFT_DELETE_PROYECTO` tinyint(1) NOT NULL DEFAULT '1',
  `PRECIO` varchar(45) NOT NULL,
  PRIMARY KEY (`ID_PROYECTO`),
  UNIQUE KEY `ID_PROYECTO_UNIQUE` (`ID_PROYECTO`),
  KEY `FK_RELATIONSHIP_17` (`ID_REPRESENTANTE`),
  KEY `FK_RELATIONSHIP_38` (`ID_ESTADO_PROYECTO`),
  KEY `FK_RANGO_COSTO` (`ID_RANGO_COSTO`),
  CONSTRAINT `FK_RANGO_COSTO` FOREIGN KEY (`ID_RANGO_COSTO`) REFERENCES `RANGO_COSTO_CATEGORIA` (`ID_RANGO_COSTO`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `FK_RELATIONSHIP_17` FOREIGN KEY (`ID_REPRESENTANTE`) REFERENCES `REPRESENTANTE` (`ID_REPRESENTANTE`),
  CONSTRAINT `FK_RELATIONSHIP_38` FOREIGN KEY (`ID_ESTADO_PROYECTO`) REFERENCES `ESTADO_PROYECTO` (`ID_ESTADO_PROYECTO`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `PROYECTO`
--

LOCK TABLES `PROYECTO` WRITE;
/*!40000 ALTER TABLE `PROYECTO` DISABLE KEYS */;
INSERT INTO `PROYECTO` VALUES (1,1,1,1,'Mi proyecto','2019-07-04 23:45:00','Proyecto de prueba',5,1,'2019-07-04 23:45:00',0,'100'),(2,1,1,1,'Amaru','2019-07-04 23:52:07','Este es el mejor proyecto de todos',-2,0,'2019-07-04 23:52:07',0,'100'),(3,1,1,1,'Función prueba','2019-07-05 00:39:01','Este proyecto es una explosión',5,1,'2019-07-05 00:39:01',0,'50'),(5,1,1,1,'123452','2019-07-05 00:44:56','Este proyecto es una explosión',5,1,'2019-07-05 00:44:56',0,'80'),(6,1,1,1,'prueba','2019-07-05 00:46:45',' ',5,1,'2019-07-05 00:46:45',0,'70'),(7,1,1,1,'Mi proyecto','2019-07-05 01:03:45','proyecto prueba',5,5,'2019-07-05 01:03:45',0,'100'),(8,1,1,1,'mi proy 3','2019-07-05 01:46:11','Esta wea ES LO MAX',10,5,'2019-07-05 01:46:11',1,'90'),(9,2,1,2,'prouyecto web','2019-07-18 17:42:54','una cosa poca para pobar que tal',100,10,'2019-07-18 17:42:54',0,'50');
/*!40000 ALTER TABLE `PROYECTO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `RANGO_COSTO_CATEGORIA`
--

DROP TABLE IF EXISTS `RANGO_COSTO_CATEGORIA`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `RANGO_COSTO_CATEGORIA` (
  `ID_RANGO_COSTO` int(11) NOT NULL AUTO_INCREMENT,
  `ID_COMISION` int(11) NOT NULL,
  `NOMBRE_RANGO` varchar(50) NOT NULL,
  `VALOR_MINIMO_USD` float NOT NULL,
  `VALOR_MAXIMO_USD` float NOT NULL,
  `DESCRIPCION_RANGO_COSTO` text,
  PRIMARY KEY (`ID_RANGO_COSTO`),
  UNIQUE KEY `ID_RANGO_COSTO_UNIQUE` (`ID_RANGO_COSTO`),
  KEY `FK_RELATIONSHIP_46` (`ID_COMISION`),
  CONSTRAINT `FK_RELATIONSHIP_46` FOREIGN KEY (`ID_COMISION`) REFERENCES `COMISION_RANGO_PROYECTO` (`ID_COMISION`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `RANGO_COSTO_CATEGORIA`
--

LOCK TABLES `RANGO_COSTO_CATEGORIA` WRITE;
/*!40000 ALTER TABLE `RANGO_COSTO_CATEGORIA` DISABLE KEYS */;
INSERT INTO `RANGO_COSTO_CATEGORIA` VALUES (1,1,'pequeño',100,200,NULL),(2,2,'muy pequeño',0,100,'muy muy pequeño');
/*!40000 ALTER TABLE `RANGO_COSTO_CATEGORIA` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `REGION_ESTADO`
--

DROP TABLE IF EXISTS `REGION_ESTADO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `REGION_ESTADO` (
  `ID_REGION` int(11) NOT NULL AUTO_INCREMENT,
  `ID_PAIS` int(11) NOT NULL,
  `NOMBRE_REGION` varchar(50) NOT NULL,
  `CODIGO_REGION` varchar(20) NOT NULL,
  PRIMARY KEY (`ID_REGION`),
  UNIQUE KEY `ID_REGION_UNIQUE` (`ID_REGION`),
  KEY `FK_RELATIONSHIP_11` (`ID_PAIS`),
  CONSTRAINT `FK_RELATIONSHIP_11` FOREIGN KEY (`ID_PAIS`) REFERENCES `PAIS` (`ID_PAIS`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `REGION_ESTADO`
--

LOCK TABLES `REGION_ESTADO` WRITE;
/*!40000 ALTER TABLE `REGION_ESTADO` DISABLE KEYS */;
/*!40000 ALTER TABLE `REGION_ESTADO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `REPRESENTANTE`
--

DROP TABLE IF EXISTS `REPRESENTANTE`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `REPRESENTANTE` (
  `ID_REPRESENTANTE` int(11) NOT NULL AUTO_INCREMENT,
  `ID_USUARIO` int(11) NOT NULL,
  `ID_CARGO` int(11) NOT NULL,
  `ID_EMPRESA` int(11) DEFAULT NULL,
  `ESTADO_REPRESENTANTE` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`ID_REPRESENTANTE`),
  UNIQUE KEY `ID_REPRESENTANTE_UNIQUE` (`ID_REPRESENTANTE`),
  UNIQUE KEY `ID_USUARIO_UNIQUE` (`ID_USUARIO`),
  KEY `FK_RELATIONSHIP_4` (`ID_EMPRESA`),
  KEY `FK_RELATIONSHIP_51` (`ID_CARGO`),
  CONSTRAINT `FK_RELATIONSHIP_3` FOREIGN KEY (`ID_USUARIO`) REFERENCES `USUARIO` (`ID_USUARIO`),
  CONSTRAINT `FK_RELATIONSHIP_4` FOREIGN KEY (`ID_EMPRESA`) REFERENCES `EMPRESA` (`ID_EMPRESA`),
  CONSTRAINT `FK_RELATIONSHIP_51` FOREIGN KEY (`ID_CARGO`) REFERENCES `CARGO` (`ID_CARGO`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `REPRESENTANTE`
--

LOCK TABLES `REPRESENTANTE` WRITE;
/*!40000 ALTER TABLE `REPRESENTANTE` DISABLE KEYS */;
INSERT INTO `REPRESENTANTE` VALUES (1,3,1,1,1),(2,4,1,1,1),(6,21,1,NULL,1),(7,6,1,NULL,1),(8,22,2,NULL,1),(9,24,1,NULL,1);
/*!40000 ALTER TABLE `REPRESENTANTE` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `REQUERIMIENTO`
--

DROP TABLE IF EXISTS `REQUERIMIENTO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `REQUERIMIENTO` (
  `ID_REQUERIMIENTO` int(11) NOT NULL AUTO_INCREMENT,
  `ID_PROYECTO` int(11) NOT NULL,
  `DESRIPCION_REQUERIMIENTO` text NOT NULL,
  `DIFICULTAD_REQUERIMIENTO` float NOT NULL,
  PRIMARY KEY (`ID_REQUERIMIENTO`),
  UNIQUE KEY `ID_REQUERIMIENTO_UNIQUE` (`ID_REQUERIMIENTO`),
  KEY `FK_RELATIONSHIP_25` (`ID_PROYECTO`),
  CONSTRAINT `FK_RELATIONSHIP_25` FOREIGN KEY (`ID_PROYECTO`) REFERENCES `PROYECTO` (`ID_PROYECTO`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `REQUERIMIENTO`
--

LOCK TABLES `REQUERIMIENTO` WRITE;
/*!40000 ALTER TABLE `REQUERIMIENTO` DISABLE KEYS */;
INSERT INTO `REQUERIMIENTO` VALUES (1,1,'Mi requerimiento de prueba para experimento de evaluacion',4);
/*!40000 ALTER TABLE `REQUERIMIENTO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `TEST_RANKING`
--

DROP TABLE IF EXISTS `TEST_RANKING`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `TEST_RANKING` (
  `ID_TEST_RANKING` int(11) NOT NULL AUTO_INCREMENT,
  `ID_ESTUDIANTE` int(11) NOT NULL,
  `NOMBRE_RANKING` varchar(50) NOT NULL,
  `APROBACION` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`ID_TEST_RANKING`),
  UNIQUE KEY `ID_TEST_RANKING_UNIQUE` (`ID_TEST_RANKING`),
  KEY `FK_RELATIONSHIP_8` (`ID_ESTUDIANTE`),
  CONSTRAINT `FK_RELATIONSHIP_8` FOREIGN KEY (`ID_ESTUDIANTE`) REFERENCES `ESTUDIANTE` (`ID_ESTUDIANTE`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `TEST_RANKING`
--

LOCK TABLES `TEST_RANKING` WRITE;
/*!40000 ALTER TABLE `TEST_RANKING` DISABLE KEYS */;
/*!40000 ALTER TABLE `TEST_RANKING` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `TIPO_DOCUMENTO`
--

DROP TABLE IF EXISTS `TIPO_DOCUMENTO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `TIPO_DOCUMENTO` (
  `ID_DOCUMENTO` int(11) NOT NULL AUTO_INCREMENT,
  `ID_USUARIO` int(11) NOT NULL,
  `ID_PAIS` int(11) NOT NULL,
  `NOMBRE_TIPO` varchar(50) NOT NULL,
  `NUMERO_DOCUMENTO` varchar(50) NOT NULL,
  `CODIGO_DOCUMENTO` varchar(60) NOT NULL,
  PRIMARY KEY (`ID_DOCUMENTO`),
  UNIQUE KEY `ID_DOCUMENTO_UNIQUE` (`ID_DOCUMENTO`),
  UNIQUE KEY `CODIGO_DOCUMENTO_UNIQUE` (`CODIGO_DOCUMENTO`),
  KEY `FK_RELATIONSHIP_1` (`ID_USUARIO`),
  KEY `FK_RELATIONSHIP_39` (`ID_PAIS`),
  CONSTRAINT `FK_RELATIONSHIP_1` FOREIGN KEY (`ID_USUARIO`) REFERENCES `USUARIO` (`ID_USUARIO`),
  CONSTRAINT `FK_RELATIONSHIP_39` FOREIGN KEY (`ID_PAIS`) REFERENCES `PAIS` (`ID_PAIS`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `TIPO_DOCUMENTO`
--

LOCK TABLES `TIPO_DOCUMENTO` WRITE;
/*!40000 ALTER TABLE `TIPO_DOCUMENTO` DISABLE KEYS */;
INSERT INTO `TIPO_DOCUMENTO` VALUES (12,1,1,'prueba','18977642k','CL18977642k'),(13,1,1,'prueba','18977642j','CL18977642j'),(14,1,1,'asda','14511','CL14511'),(15,1,4,'asda','','US1'),(16,2,1,'asda','147853','CL147853'),(17,4,1,'carnet','1478936','CL1478936'),(18,2,1,'Cedula','12235-k','CL12235-k');
/*!40000 ALTER TABLE `TIPO_DOCUMENTO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `TIPO_TEST_RANKING`
--

DROP TABLE IF EXISTS `TIPO_TEST_RANKING`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `TIPO_TEST_RANKING` (
  `ID_TIPO_TEST_RANKING` int(11) NOT NULL AUTO_INCREMENT,
  `ID_TEST_RANKING` int(11) NOT NULL,
  `TIPO_CONVERSION_RANKING` varchar(50) NOT NULL,
  `VALOR_RANKING` varchar(20) NOT NULL,
  `VALOR_CONVERTIDO` int(11) NOT NULL,
  PRIMARY KEY (`ID_TIPO_TEST_RANKING`),
  UNIQUE KEY `ID_TIPO_TEST_RANKING_UNIQUE` (`ID_TIPO_TEST_RANKING`),
  KEY `FK_RELATIONSHIP_47` (`ID_TEST_RANKING`),
  CONSTRAINT `FK_RELATIONSHIP_47` FOREIGN KEY (`ID_TEST_RANKING`) REFERENCES `TEST_RANKING` (`ID_TEST_RANKING`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `TIPO_TEST_RANKING`
--

LOCK TABLES `TIPO_TEST_RANKING` WRITE;
/*!40000 ALTER TABLE `TIPO_TEST_RANKING` DISABLE KEYS */;
/*!40000 ALTER TABLE `TIPO_TEST_RANKING` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `TUTORIAL`
--

DROP TABLE IF EXISTS `TUTORIAL`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `TUTORIAL` (
  `ID_TUTORIAL` int(11) NOT NULL,
  `ID_HABILIDAD` int(11) NOT NULL,
  `NOMBRE_TUTORIAL` varchar(50) NOT NULL,
  `DIFICULTAD` int(11) NOT NULL DEFAULT '1',
  `URL_TUTORIAL` varchar(2083) NOT NULL,
  PRIMARY KEY (`ID_TUTORIAL`),
  UNIQUE KEY `ID_TUTORIAL_UNIQUE` (`ID_TUTORIAL`),
  KEY `FK_RELATIONSHIP_30` (`ID_HABILIDAD`),
  CONSTRAINT `FK_RELATIONSHIP_30` FOREIGN KEY (`ID_HABILIDAD`) REFERENCES `HABILIDAD` (`ID_HABILIDAD`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `TUTORIAL`
--

LOCK TABLES `TUTORIAL` WRITE;
/*!40000 ALTER TABLE `TUTORIAL` DISABLE KEYS */;
/*!40000 ALTER TABLE `TUTORIAL` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `UNIVERSIDAD`
--

DROP TABLE IF EXISTS `UNIVERSIDAD`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `UNIVERSIDAD` (
  `ID_UNIVERSIDAD` int(11) NOT NULL AUTO_INCREMENT,
  `NOMBRE_UNIVERSIDAD` varchar(50) NOT NULL,
  `CODIGO_UNIVERSIDAD` varchar(10) NOT NULL,
  PRIMARY KEY (`ID_UNIVERSIDAD`),
  UNIQUE KEY `ID_UNIVERSIDAD_UNIQUE` (`ID_UNIVERSIDAD`),
  UNIQUE KEY `CODIGO_UNIVERSIDAD_UNIQUE` (`CODIGO_UNIVERSIDAD`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `UNIVERSIDAD`
--

LOCK TABLES `UNIVERSIDAD` WRITE;
/*!40000 ALTER TABLE `UNIVERSIDAD` DISABLE KEYS */;
INSERT INTO `UNIVERSIDAD` VALUES (1,'Universidad de Santiago de Chile','USACH'),(2,'Universidad APLAPLAC','APLAPLAC'),(3,'Universidad Inacap','INACAP');
/*!40000 ALTER TABLE `UNIVERSIDAD` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `USUARIO`
--

DROP TABLE IF EXISTS `USUARIO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `USUARIO` (
  `ID_USUARIO` int(11) NOT NULL AUTO_INCREMENT,
  `NOMBRE` varchar(50) NOT NULL,
  `APELLIDO_PATERNO` varchar(50) NOT NULL,
  `APELLIDO_MATERNO` varchar(50) NOT NULL,
  `CORREO_ELECTRONICO` varchar(100) NOT NULL,
  `TELEFONO` varchar(50) NOT NULL,
  `GENERO` char(1) NOT NULL,
  `CONTRASENA` varchar(20) NOT NULL,
  `FECHA_NACIMIENTO` date NOT NULL,
  `FECHA_INGRESO_USUARIO` datetime NOT NULL,
  `FECHA_ACTUALIZACION_USUARIO` datetime DEFAULT NULL,
  `SOFT_DELETE_USUARIO` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`ID_USUARIO`),
  UNIQUE KEY `ID_USUARIO_UNIQUE` (`ID_USUARIO`),
  UNIQUE KEY `CORREO_ELECTRONICO_UNIQUE` (`CORREO_ELECTRONICO`)
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `USUARIO`
--

LOCK TABLES `USUARIO` WRITE;
/*!40000 ALTER TABLE `USUARIO` DISABLE KEYS */;
INSERT INTO `USUARIO` VALUES (1,'Juan','gomez','perez','abc@abc.cl','+56987213241','M','Qbkglrelyrldgpawlv','2000-09-08','2018-12-25 09:14:33','2019-01-03 15:03:00',1),(2,'Marcos','salazar','aranda','Msaara@uni.cl','+56978945612','M','Vdqtorfatfsvf','1995-06-29','2018-05-02 12:35:15','2018-06-07 09:10:15',1),(3,'Karim','Abdul','Yabar','kaabya@uni.cl','+56987411225','O','Expqqjwehauxud','1998-01-21','2018-05-09 02:37:16','2018-12-01 21:15:04',0),(4,'Claudia','martinez','lopez','clamarlo@hotmail.com','+56222587412','F','Itqkuptu mnpuw','2001-01-01','2018-08-09 06:21:36','2019-03-13 06:27:14',1),(5,'Manuela','tabares','tejo','matate@uni.cl','+56236589741','F','Olaftnixxqjtiyadhi','1999-03-24','2018-01-01 00:00:00','2018-01-01 00:00:00',0),(6,'jesus','prueba','prueb','jesus@prueba.com','987654321','M','jesus12345','1995-01-16','2019-06-23 20:30:50','2019-06-23 20:30:50',0),(7,'abc','acv','aas','aa@uni.com','M','M','aaaaaaa','1800-01-01','2019-06-23 21:54:56','2019-06-23 21:54:56',0),(21,'salo','reyes','reyes','sarere@qwer.asd','5612812871','M','sad134a','1999-05-06','2019-06-24 03:36:41','2019-06-24 03:36:41',0),(22,'Fabian','Arizmendi','Aaaa','Aaa@aaa.cl','569878411','M','sadas123','1999-06-07','2019-07-04 23:26:12','2019-07-04 23:26:12',0),(23,'Fabian','Arizmendi','Aaaa','Aab@aaa.cl','569878411','M','sadas123','1999-06-07','2019-07-04 23:56:18','2019-07-04 23:56:18',0),(24,'Gerardo','Fernández','Hormazábal','gera.resident.92@gmail.com','+56983281500','M','mipass91','1992-09-07','2019-07-05 01:27:55','2019-07-05 01:27:55',0);
/*!40000 ALTER TABLE `USUARIO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `VALIDA_DOC_PAIS`
--

DROP TABLE IF EXISTS `VALIDA_DOC_PAIS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `VALIDA_DOC_PAIS` (
  `ID_validador` int(11) NOT NULL,
  `VALIDA_REGEX` varchar(45) NOT NULL,
  `AUTOCOMPLETAR` tinyint(4) NOT NULL DEFAULT '0',
  `ID_PAIS` int(11) NOT NULL,
  PRIMARY KEY (`ID_validador`),
  UNIQUE KEY `ID_validador_UNIQUE` (`ID_validador`),
  KEY `FK_PAIS_idx` (`ID_PAIS`),
  CONSTRAINT `FK_PAIS` FOREIGN KEY (`ID_PAIS`) REFERENCES `PAIS` (`ID_PAIS`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `VALIDA_DOC_PAIS`
--

LOCK TABLES `VALIDA_DOC_PAIS` WRITE;
/*!40000 ALTER TABLE `VALIDA_DOC_PAIS` DISABLE KEYS */;
INSERT INTO `VALIDA_DOC_PAIS` VALUES (1,'\\d{7,9}\\-[Kk0-9]',0,1),(2,'',1,4);
/*!40000 ALTER TABLE `VALIDA_DOC_PAIS` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping routines for database 'TBD_2019_1'
--
/*!50003 DROP PROCEDURE IF EXISTS `aceptar_acuerdo_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `aceptar_acuerdo_final`( IN
	id_proyecto_acordado BIGINT,
	id_acuerdo_aceptado BIGINT,
	datetime_termino DATETIME
)
BEGIN
	DECLARE today DATETIME;
	SELECT NOW() INTO today;

	IF ( id_acuerdo_aceptado < 0 or id_proyecto_acordado < 0 or id_proyecto_acordado > 4294967295 or id_proyecto_acordado < 0 or  id_acuerdo_aceptado > 4294967295) then 
		SELECT 'Los ids ingresados no son correctos';
	ELSE
		IF ( SELECT id_proyecto_acordado REGEXP '[^0-9]' = 0 AND id_proyecto_acordado is not null ) THEN
			IF EXISTS (SELECT ID_PROYECTO FROM PROYECTO WHERE ID_PROYECTO = id_proyecto_acordado) THEN
				IF ( SELECT id_acuerdo_aceptado REGEXP '[^0-9]' = 0 AND id_acuerdo_aceptado is not null ) THEN
					IF EXISTS (SELECT id_acuerdo FROM ACUERDO WHERE id_acuerdo = id_acuerdo_aceptado) THEN
						UPDATE ACUERDO SET
							fecha_inicio_trabajo = today,
							fecha_termino_tentativa = datetime_termino,
							fecha_actualizacion_acuerdo = today,
							estado_acuerdo = 2, /* estado 2 = aceptado */
							soft_delete_acuerdo = 0
						WHERE id_acuerdo = id_acuerdo_aceptado;

						UPDATE ACUERDO SET
							fecha_actualizacion_acuerdo = today,
							estado_acuerdo = 4, /* estado 4 = retenido mientras el proyecto esta siendo realizado por otro acuerdo (otra propuesta aceptada) */
							soft_delete_acuerdo = 1
						WHERE id_proyecto = id_proyecto_acordado AND id_acuerdo <> id_acuerdo_aceptado;
					ELSE
						SELECT 'No existe el acuerdo que desea aceptar';
					END IF;
				ELSE
					SELECT 'El acuerdo indicado está incorrecto';
				END IF;
			ELSE
				SELECT 'No existe el proyecto indicado';
			END IF;
		ELSE
			SELECT 'El proyecto indicado está incorrecto';
		END IF;
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `actualizar_representante` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `actualizar_representante`( 
	IN id_repre INT,
	IN id_cargo_usuario INT,
	IN id_empresa_usuario INT
)
BEGIN

DECLARE today DATETIME;
DECLARE id_usu INT;
SELECT NOW() INTO today;
SELECT ID_USUARIO FROM REPRESENTANTE where ID_REPRESENTANTE = id_repre INTO id_usu;
	
    UPDATE USUARIO SET
		fecha_actualizacion_usuario = today
	WHERE ID_USUARIO = id_usu;

	IF EXISTS (SELECT * FROM EMPRESA WHERE ID_EMPRESA = id_empresa_usuario) THEN
    
		UPDATE REPRESENTANTE SET
			ID_CARGO = id_cargo_usuario,
			ID_EMPRESA = id_empresa_usuario
		WHERE id_representante = id_repre;
        
	ELSE 
		UPDATE REPRESENTANTE SET
			id_cargo = id_cargo_usuario
		WHERE id_representante = id_repre;
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `agregar_habilidad_requerida_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `agregar_habilidad_requerida_final`( IN 
	id_req BIGINT,
	id_hab_req BIGINT
)
BEGIN
	IF ( SELECT id_req REGEXP '[^0-9]' = 0 AND id_req is not null AND id_req > 0 and id_req < 4294967295) then
		IF ( id_hab_req > 0 AND id_hab_req < 4294967295) then
			IF EXISTS ( SELECT * FROM REQUERIMIENTO WHERE ID_REQUERIMIENTO = id_req) THEN
				INSERT INTO HABILIDAD_REQUERIDA (
					ID_REQUERIMIENTO,
					ID_HABILIDAD,
					TIMEESTAM_HAB_REQ
					)
				VALUES (
					id_req,
					id_hab_req,
					CURRENT_TIMESTAMP
					);
				CALL TBD_2019_1.calcular_dificultad_requerimiento_final(
					id_req
					);
			ELSE
				SELECT 'No existe el requerimiento indicado';
			END IF;
		END IF;
	ELSE
		SELECT 'El id requerimiento está mal ingresado';
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Agregar_impuesto` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Agregar_impuesto`(in nom_pais varchar(50), id_pais int, nombre_imp varchar(50), impuesto float)
BEGIN
if (nom_pais = '') then
	if (id_pais = -1) then
		select "no se ha especificado correctamente a quien corresponde el impuesto";
	elseif (id_pais != -1) then
   		if exists (select ID_PAIS from PAIS where ID_PAIS = id_pais) then
			insert into IMPUESTO (ID_PAIS, NOMBRE_IMPUESTO, PORCENTAJE_IMPUESTO, FECHA_ACTUALIZACION_IMPUESTO) 
            values(id_pais, nombre_imp, impuesto, now());
		else 
			select "El pais no existe";
		end if;
	end if;
elseif (nom_pais != '') then
	if (id_pais = -1) then
		if exists (select ID_PAIS from PAIS where NOMBRE_PAIS = nom_pais) then
			insert into IMPUESTO (ID_PAIS, NOMBRE_IMPUESTO, PORCENTAJE_IMPUESTO, FECHA_ACTUALIZACION_IMPUESTO) 
            values((select ID_PAIS from PAIS where NOMBRE_PAIS = nom_pais), nombre_imp, impuesto, now());
		else 
			select "El pais no existe";
		end if;
	elseif (id_pais != -1) then
		if exists (select ID_PAIS from PAIS where ID_PAIS = id_pais and NOMBRE_PAIS = nom_pais) then
			insert into IMPUESTO (ID_PAIS, NOMBRE_IMPUESTO, PORCENTAJE_IMPUESTO, FECHA_ACTUALIZACION_IMPUESTO) 
            values(id_pais, nombre_imp, impuesto, now());
		else 
			select "El pais señalado no coinciden sus datos";
		end if;
	end if;
else
	select "no se han entregado datos del pais asociado al impuesto";
end if;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Agregar_pais` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Agregar_pais`(in nom_pais varchar(50))
BEGIN
if exists (select ID_PAIS from PAIS where NOMBRE_PAIS = nom_pais) then
	select "el pais ya existe";
else 
	insert into PAIS (NOMBRE_PAIS) values (nom_pais);
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `agregar_tutorial` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `agregar_tutorial`( IN
	id_habilidad_rel INT,
	nombre_tutorial_nuevo VARCHAR(50),
	dificultad_tutorial_nuevo INT,
	url_tutorial_nuevo VARCHAR(2083)
)
BEGIN
	IF NOT EXISTS (SELECT nombre_tutorial FROM TUTORIAL WHERE nombre_tutorial = nombre_tutorial_nuevo) THEN
		INSERT INTO TUTORIAL(
			id_habilidad,
			nombre_tutorial,
			dificultad,
			url_tutorial
		) VALUES (
				id_habilidad_rel,
				nombre_tutorial_nuevo,
				dificultad_tutorial_nuevo,
				url_tutorial_nuevo
			);
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Agregar_universidad` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Agregar_universidad`(in nombre_uni varchar(50))
BEGIN

if exists (select ID_UNIVERSIDAD from UNIVERSIDAD where NOMBRE_UNIVERSIDAD = nombre_uni) then
	select "La universidad ya existe";
else 
	insert into UNIVERSIDAD (NOMBRE_UNIVERSIDAD) values (nombre_uni);
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Asignar_cargo_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Asignar_cargo_final`(
	IN cod_cargo int,
    IN nom_cargo varchar(50),
    IN cod_user int,
    IN cod_representante int
)
BEGIN

DECLARE cargo_nuevo INT;
DECLARE cargo_antiguo INT;

if (select cod_cargo REGEXP '[^0-9]' = 1 or cod_cargo is NULL) then
	if (select nom_cargo REGEXP '[^A-Z a-záÁéÉíÍóÓúÚ]' = 1 or nom_cargo is NULL) then
		select 'No se ha especificado el cargo correctamente';
	else
		if not exists (select * from CARGO where NOMBRE_CARGO = nom_cargo) then
			select 'El cargo especificado no existe';
		else
			select ID_CARGO from CARGO where NOMBRE_CARGO = nom_cargo into cargo_nuevo;
			if (select cod_user REGEXP '[^0-9]' = 1 or cod_user is NULL) then
				if (select cod_representante REGEXP '[^0-9]' = 1 or cod_representante is NULL) then
					select 'No se ha especificado representante';
				else
					if exists (select * from REPRESENTANTE where ID_REPRESENTANTE = cod_representante) then
						select ID_CARGO from REPRESENTANTE where ID_REPRESENTANTE = cod_representante into cargo_antiguo;
						if (cargo_nuevo = cargo_antiguo) then
							select 'No requiere actualizar cargo';
						else
							update REPRESENTANTE set ID_CARGO = cargo_nuevo where ID_REPRESENTANTE = cod_representante;
						end if;
					else
						select 'El representante no existe';
					end if;
				end if;
			else
				if exists (select * from REPRESENTANTE where ID_USUARIO = cod_user) then
					select ID_CARGO from REPRESENTANTE where ID_USUARIO = cod_user into cargo_antiguo;
					if (cargo_nuevo = cargo_antiguo) then
						select 'No requiere actualizar cargo';
					else
						update REPRESENTANTE set ID_CARGO = cargo_nuevo where ID_USUARIO = cod_user;
					end if;
				else
					select 'El representante no existe';
				end if;
			end if;
		end if;
	end if;
else
	if exists (select * from CARGO where ID_CARGO = cod_cargo) then
		if (select cod_user REGEXP '[^0-9]' = 1 or cod_user is NULL) then
			if (select cod_representante REGEXP '[^0-9]' = 1 or cod_representante is NULL) then
				select 'No se ha especificado representante';
			else
				if exists (select * from REPRESENTANTE where ID_REPRESENTANTE = cod_representante) then
					select ID_CARGO from REPRESENTANTE where ID_REPRESENTANTE = cod_representante into cargo_antiguo;
					if (cod_cargo = cargo_antiguo) then
						select 'No requiere actualizar cargo';
					else
						update REPRESENTANTE set ID_CARGO = cod_cargo where ID_REPRESENTANTE = cod_representante;
					end if;
				else
					select 'El representante no existe';
				end if;
			end if;
		else
			if exists (select * from REPRESENTANTE where ID_USUARIO = cod_user) then
				select ID_CARGO from REPRESENTANTE where ID_USUARIO = cod_user into cargo_antiguo;
				if (cod_cargo = cargo_antiguo) then
					select 'No requiere actualizar cargo';
				else
					update REPRESENTANTE set ID_CARGO = cod_cargo where ID_USUARIO = cod_user;
				end if;
			else
				select 'El representante no existe';
			end if;
		end if;
	else
		select 'El cargo especificado no existe';
	end if;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Asignar_cargo_final_beta` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Asignar_cargo_final_beta`(
	IN cod_cargo BIGINT,
    IN nom_cargo VARCHAR(1000),
    IN cod_user BIGINT,
    IN cod_representante BIGINT
)
BEGIN

DECLARE cargo_nuevo INT;
DECLARE cargo_antiguo INT;

IF (cod_cargo > 0 AND cod_cargo < 4294967295) THEN
	IF (nom_cargo is not null AND length(nom_cargo) > 5 AND length(nom_cargo) < 50 ) THEN
		IF (cod_user > 0 AND cod_user < 4294967295) THEN 
			IF (cod_representante > 0 AND cod_representante < 4294967295) THEN
				if (select cod_cargo REGEXP '[^0-9]' = 1 or cod_cargo is NULL) then
					if (select nom_cargo REGEXP '[^A-Z a-záÁéÉíÍóÓúÚ]' = 1 or nom_cargo is NULL) then
						select 'No se ha especificado el cargo correctamente';
					else
						if not exists (select * from CARGO where NOMBRE_CARGO = nom_cargo) then
							select 'El cargo especificado no existe';
						else
							select ID_CARGO from CARGO where NOMBRE_CARGO = nom_cargo into cargo_nuevo;
							if (select cod_user REGEXP '[^0-9]' = 1 or cod_user is NULL) then
								if (select cod_representante REGEXP '[^0-9]' = 1 or cod_representante is NULL) then
									select 'No se ha especificado representante';
								else
									if exists (select * from REPRESENTANTE where ID_REPRESENTANTE = cod_representante) then
										select ID_CARGO from REPRESENTANTE where ID_REPRESENTANTE = cod_representante into cargo_antiguo;
										if (cargo_nuevo = cargo_antiguo) then
											select 'No requiere actualizar cargo';
										else
											update REPRESENTANTE set ID_CARGO = cargo_nuevo where ID_REPRESENTANTE = cod_representante;
										end if;
									else
										select 'El representante no existe 1';
									end if;
								end if;
							else
								if exists (select * from REPRESENTANTE where ID_USUARIO = cod_user) then
									select ID_CARGO from REPRESENTANTE where ID_USUARIO = cod_user into cargo_antiguo;
									if (cargo_nuevo = cargo_antiguo) then
										select 'No requiere actualizar cargo';
									else
										update REPRESENTANTE set ID_CARGO = cargo_nuevo where ID_USUARIO = cod_user;
									end if;
								else
									select 'El representante no existe 2';
								end if;
							end if;
						end if;
					end if;
				else
					if exists (select * from CARGO where ID_CARGO = cod_cargo) then
						if (select cod_user REGEXP '[^0-9]' = 1 or cod_user is NULL) then
							if (select cod_representante REGEXP '[^0-9]' = 1 or cod_representante is NULL) then
								select 'No se ha especificado representante';
							else
								if exists (select * from REPRESENTANTE where ID_REPRESENTANTE = cod_representante) then
									select ID_CARGO from REPRESENTANTE where ID_REPRESENTANTE = cod_representante into cargo_antiguo;
									if (cod_cargo = cargo_antiguo) then
										select 'No requiere actualizar cargo';
									else
										update REPRESENTANTE set ID_CARGO = cod_cargo where ID_REPRESENTANTE = cod_representante;
									end if;
								else
									select 'El representante no existe 3';
								end if;
							end if;
						else
							if exists (select * from REPRESENTANTE where ID_USUARIO = cod_user) then
								select ID_CARGO from REPRESENTANTE where ID_USUARIO = cod_user into cargo_antiguo;
								if (cod_cargo = cargo_antiguo) then
									select 'No requiere actualizar cargo';
								else
									update REPRESENTANTE set ID_CARGO = cod_cargo where ID_USUARIO = cod_user;
								end if;
							else
								select 'El representante no existe 4';
							end if;
						end if;
					else
						select 'El cargo especificado no existe';
					end if;
				end if;
			END IF;
		END IF;
	END IF;
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Asignar_direccion_usuario_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Asignar_direccion_usuario_final`(
	IN id_usu INT,
    IN dir_habilitada INT,
    IN dir_facturacion INT,
    
    IN id_ciu INT,
    IN id_uni INT,
    IN calle VARCHAR(50),
    IN num VARCHAR(50),
    IN depart varchar(50),
    IN tipo_dir INT
)
BEGIN
DECLARE id_dir INT;
IF exists ( SELECT ID_DIRECCION FROM DIRECCION WHERE ID_CIUDAD = id_ciudad AND ID_UNIVERSIDAD = id_uni AND CALLE like calle AND NUMERO like num AND TIPO_DIRECCION = tipo_dir) then
	IF exists ( SELECT ID_UNIVERSIDAD FROM DIRECCION WHERE ID_CIUDAD = id_ciudad AND CALLE like calle AND NUMERO like num AND TIPO_DIRECCION = tipo_dir) then 
		SELECT 'No se puede asignar una direccion a una universidad';
	ELSE
		SELECT ID_DIRECCION FROM DIRECCION WHERE ID_CIUDAD = id_ciudad AND ID_UNIVERSIDAD = id_uni AND CALLE like calle AND NUMERO like num AND TIPO_DIRECCION = tipo_dir INTO id_dir;
		IF( id_usu > 0 AND dir_habilitada >= 0 AND dir_facturacion >= 0 ) then 
			IF EXISTS ( SELECT * FROM USUARIO WHERE ID_USUARIO = id_usu) then
				INSERT INTO DIRECCION_USUARIO (id_usuario, id_direccion, direccion_habilitada, direccion_facturacion) VALUE (id_usu, id_dir, dir_habilitada, dir_facturacion);
			ELSE
				SELECT 'El usuario ingresado no existe';
			END IF;
		ELSE
			SELECT ' dato ingresado de forma incorrecta verifique los valores ';
		END IF;
	END IF;
ELSE
	call Crear_direccion_usuario_final(id_ciu, id_uni, calle, num, depart, tipo_dir);
    SELECT ID_DIRECCION FROM DIRECCION WHERE ID_CIUDAD = id_ciudad AND ID_UNIVERSIDAD = id_uni AND CALLE like calle AND NUMERO like num AND TIPO_DIRECCION = tipo_dir INTO id_dir;
    IF( id_usu > 0 AND dir_facturacion >= 0 ) then 
		IF EXISTS ( SELECT * FROM USUARIO WHERE ID_USUARIO = id_usu) then
			INSERT INTO DIRECCION_USUARIO (id_usuario, id_direccion, direccion_habilitada, direccion_facturacion) VALUE (id_usu, id_dir, 1, 0);
		ELSE
			SELECT 'El usuario ingresado no existe';
		END IF;
	ELSE
		SELECT ' dato ingresado de forma incorrecta verifique los valores ';
	END IF;
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Asignar_direccion_usuario_final_beta` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Asignar_direccion_usuario_final_beta`(
	IN id_usu BIGINT,
    IN dir_habilitada BIGINT,
    IN dir_facturacion BIGINT,
    
    IN id_ciu BIGINT,
    IN id_uni BIGINT,
    IN calle VARCHAR(1000),
    IN num VARCHAR(1000),
    IN depart varchar(1000),
    IN tipo_dir BIGINT
)
BEGIN
DECLARE id_dir INT;

IF (id_usu > 0 AND id_usu < 4294967295) THEN
	IF (dir_habilitada > 0 AND dir_habilitada < 4294967295) THEN
		IF (dir_facturacion > 0 AND dir_facturacion < 4294967295) THEN
			IF (id_ciu > 0 AND id_ciu < 4294967295) THEN
				IF (id_uni > 0 AND id_uni < 4294967295) THEN
					IF (length(calle) > 3 AND length(calle) < 50) THEN
						IF (length(num) > 3 AND length(num) < 50) THEN
							IF (length(depart) < 50) THEN
								IF (tipo_dir > 0 AND tipo_dir < 4294967295) THEN
									IF exists ( SELECT ID_DIRECCION FROM DIRECCION WHERE ID_CIUDAD = id_ciudad AND ID_UNIVERSIDAD = id_uni AND CALLE like calle AND NUMERO like num AND TIPO_DIRECCION = tipo_dir) then
										IF exists ( SELECT ID_UNIVERSIDAD FROM DIRECCION WHERE ID_CIUDAD = id_ciudad AND CALLE like calle AND NUMERO like num AND TIPO_DIRECCION = tipo_dir) then 
											SELECT 'No se puede asignar una direccion a una universidad';
										ELSE
											SELECT ID_DIRECCION FROM DIRECCION WHERE ID_CIUDAD = id_ciudad AND ID_UNIVERSIDAD = id_uni AND CALLE like calle AND NUMERO like num AND TIPO_DIRECCION = tipo_dir INTO id_dir;
											IF( id_usu > 0 AND dir_habilitada >= 0 AND dir_facturacion >= 0 ) then 
												IF EXISTS ( SELECT * FROM USUARIO WHERE ID_USUARIO = id_usu) then
													INSERT INTO DIRECCION_USUARIO (id_usuario, id_direccion, direccion_habilitada, direccion_facturacion) VALUE (id_usu, id_dir, dir_habilitada, dir_facturacion);
												ELSE
													SELECT 'El usuario ingresado no existe';
												END IF;
											ELSE
												SELECT ' dato ingresado de forma incorrecta verifique los valores ';
											END IF;
										END IF;
									ELSE
										call Crear_direccion_usuario_final(id_ciu, id_uni, calle, num, depart, tipo_dir);
										SELECT ID_DIRECCION FROM DIRECCION WHERE ID_CIUDAD = id_ciudad AND ID_UNIVERSIDAD = id_uni AND CALLE like calle AND NUMERO like num AND TIPO_DIRECCION = tipo_dir INTO id_dir;
										IF( id_usu > 0 AND dir_facturacion >= 0 ) then 
											IF EXISTS ( SELECT * FROM USUARIO WHERE ID_USUARIO = id_usu) then
												INSERT INTO DIRECCION_USUARIO (id_usuario, id_direccion, direccion_habilitada, direccion_facturacion) VALUE (id_usu, id_dir, 1, 0);
											ELSE
												SELECT 'El usuario ingresado no existe';
											END IF;
										ELSE
											SELECT ' dato ingresado de forma incorrecta verifique los valores ';
										END IF;
									END IF;
                                END IF;
							END IF;
						END IF;
					END IF;
				END IF;
			END IF;
		END IF;
	END IF;
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Asignar_grupo_privilegio_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Asignar_grupo_privilegio_final`(
	IN id_usu BIGINT,
    IN grupo_privi BIGINT
)
BEGIN
 IF (id_usu > 0 AND id_usu < 4294967295) THEN
	IF ( grupo_privi > 0 AND grupo_privi < 4294967295) THEN
		IF exists ( SELECT ID_GRUPO_PRIVILEGIO_USUARIO FROM ASIGNACION WHERE ID_USUARIO = id_usu ) then
			IF exists ( SELECT * FROM ASIGNACION WHERE ASIGNACION_USUARIO = CONCAT(id_usu, grupo_privi)) then
				SELECT 'El privilegio ya se encuentra registrado';
			ELSE
				IF EXISTS ( SELECT * FROM GRUPO_PRIVILEGIO_USUARIO WHERE ID_GRUPO_PRIVILEGIO_USUARIO = grupo_privi ) then
					INSERT INTO ASIGNACION (ID_USUARIO, ID_GRUPO_PRIVILEGIO_USUARIO, HABILITADO, ASIGNACION_USUARIO) VALUES(id_usu, grupo_privi, 3, CONCAT(id_usu, grupo_privi));
				ELSE
					SELECT 'El grupo privilegio ingresado no existe';
				END IF;
			END IF; 
		ELSE
			SELECT 'El usuario ingresado no existe no se puede asignar privilegio';
		END IF;
	END IF;
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `borrar_tutorial` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `borrar_tutorial`( IN
	id_tutorial_bus INT
)
BEGIN
	DELETE FROM TUTORIAL WHERE id_tutorial = id_tutorial_bus;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `buscar_cargo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `buscar_cargo`( 
	IN id_cargo_bus INT,
	IN nombre_cargo_bus VARCHAR(50)
)
BEGIN
	SELECT * FROM CARGO WHERE id_cargo = id_cargo_bus OR nombre_cargo = nombre_cargo_bus;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `buscar_categoria` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `buscar_categoria`( 
	IN id_categoria_bus INT,
	IN nombre_categoria_bus VARCHAR(50)
)
BEGIN
	SELECT * FROM CATEGORIA WHERE id_categoria = id_categoria_bus OR nombre_categoria_hab = nombre_categoria_bus;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `buscar_empresa` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `buscar_empresa`( 
	IN id_empresa_buscada INT
)
BEGIN
	SELECT * FROM EMPRESA WHERE id_empresa = id_empresa_buscada;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `buscar_proyectos_x_habilidad_estudiante_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `buscar_proyectos_x_habilidad_estudiante_final`( IN 
	id_est BIGINT
)
BEGIN
	IF ( SELECT id_est REGEXP '[^0-9]' = 0 AND id_est is not null AND id_est < 4294967295) then
		IF EXISTS ( SELECT * FROM ESTUDIANTE WHERE ID_ESTUDIANTE = id_est) THEN
			SELECT ID_PROYECTO FROM REQUERIMIENTO WHERE ID_REQUERIMIENTO IN 
            (SELECT ID_REQUERIMIENTO FROM HABILIDAD_REQUERIDA WHERE ID_HABILIDAD IN 
                (SELECT ID_HABILIDAD FROM HABILIDAD_ESTUDIANTE WHERE ID_ESTUDIANTE = id_est));
		ELSE
			SELECT 'No existe el estudiante indicado';
		END IF;
	ELSE
		SELECT 'El id estudiante está incorrecto o está mal ingresado';
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `buscar_tutorial` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `buscar_tutorial`( 
	IN id_habilidad_bus INT,
	IN nombre_tutorial_bus VARCHAR(50)
)
BEGIN
	SELECT * FROM TUTORIAL WHERE id_habilidad = id_habilidad_bus OR nombre_tutorial = nombre_tutorial_bus;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `calcular_dificultad_requerimiento_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `calcular_dificultad_requerimiento_final`(IN
	id_req BIGINT
)
BEGIN
DECLARE dificultad_req INT;
SELECT AVG(DIFICULTAD_HABILIDAD) FROM HABILIDAD WHERE ID_HABILIDAD IN (SELECT ID_HABILIDAD FROM HABILIDAD_REQUERIDA WHERE ID_REQUERIMIENTO = id_req) INTO dificultad_req;

IF (id_req > 0 AND id_req < 4294967295) THEN 
	IF ( SELECT id_req REGEXP '[^0-9]' = 0 AND id_req is not null ) then
		IF EXISTS ( SELECT * FROM REQUERIMIENTO WHERE ID_REQUERIMIENTO = id_req ) THEN
			UPDATE REQUERIMIENTO SET
				DIFICULTAD_REQUERIMIENTO = dificultad_req
			WHERE ID_REQUERIMIENTO = id_req;
		ELSE
			SELECT 'No existe el requerimiento indicado';
		END IF;
	ELSE
		SELECT 'El id requerimiento está mal indicado';
	END IF;
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Cambiar_estado_proyecto_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Cambiar_estado_proyecto_final`(
	IN id_proy INT,
    IN id_repre INT,
	IN id_new_est_proy INT
	)
BEGIN
IF (id_proy > 0 AND id_proy < 4294967295) THEN
	IF (id_repre > 0 AND id_repre < 4294967295) THEN
		IF (id_new_est_proy > 0 AND id_new_est_proy < 4294967295) THEN 
			IF ( SELECT id_repre REGEXP '[^0-9]' = 0 AND id_repre is not null ) then
				IF EXISTS ( SELECT * FROM REPRESENTANTE WHERE ID_REPRESENTANTE = id_repre ) then
					IF (SELECT ID_EMPRESA FROM REPRESENTANTE WHERE ID_REPRESENTANTE = id_repre) IS NOT NULL THEN
						IF ( SELECT ID_EMPRESA FROM REPRESENTANTE WHERE ID_REPRESENTANTE = id_repre ) = ( SELECT ID_EMPRESA FROM REPRESENTANTE WHERE ID_REPRESENTANTE = ( SELECT ID_REPRESENTANTE FROM PROYECTO WHERE ID_PROYECTO = id_proy ) ) THEN
							UPDATE PROYECTO SET
								ID_ESTADO_PROYECTO = id_new_est_proy
							WHERE ID_PROYECTO = id_proy;
						ELSE
							SELECT 'El representante no puede modificar el estado del proyecto porque no pertenece a la misma empresa de quien lo creo';
						END IF;
					ELSE
						UPDATE PROYECTO SET
							ID_ESTADO_PROYECTO = id_new_est_proy
						WHERE ID_PROYECTO = id_proy;
					END IF;
				ELSE
					Select 'El representante no existe en la plataforma';
				END IF;
			ELSE
				Select 'El id de representante indicado está incorrecto';
			END IF;
		ELSE
			SELECT 'el id ingresado es incorrecto';
        END IF;
	ELSE
		SELECT 'el id ingresado es incorrecto';
	END IF;
ELSE
	SELECT 'el id ingresado es incorrecto';
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `crear_acuerdo_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `crear_acuerdo_final`( IN
	id_propuesta_presentada INT,
	id_proyecto_destino INT,
	datetime_termino DATETIME
)
BEGIN
	DECLARE today DATETIME;
	SELECT NOW() INTO today;

	IF ( id_propuesta_presentada < 0 or id_proyecto_destino < 0) then 
		SELECT 'Los ids ingresados no son correctos';
	ELSE
		IF ( SELECT id_proyecto_destino REGEXP '[^0-9]' = 0 AND id_proyecto_destino is not null ) THEN
			IF EXISTS (SELECT ID_PROYECTO FROM PROYECTO WHERE ID_PROYECTO = id_proyecto_destino) THEN
				IF ( SELECT id_propuesta_presentada REGEXP '[^0-9]' = 0 AND id_propuesta_presentada is not null ) THEN
					IF EXISTS (SELECT ID_PROPUESTA FROM PROPUESTA WHERE ID_PROPUESTA = id_propuesta_presentada) THEN	
						INSERT INTO ACUERDO(
							ID_PROPUESTA,
							ID_PROYECTO,
							FECHA_CREACION_ACUERDO,
							FECHA_INICIO_TRABAJO,
							FECHA_TERMINO_TENTATIVA,
							FECHA_ACTUALIZACION_ACUERDO,
							ESTADO_ACUERDO,
							SOFT_DELETE_ACUERDO
						) 
						VALUES (
							id_propuesta_presentada,
							id_proyecto_destino,
							today,
							today,
							datetime_termino,
							today,
							1, /* Estado 1 = en espera */
							0
							);
					ELSE
						SELECT 'No existe la pruepuesta que desea acordar';
					END IF;
				ELSE
					SELECT 'El id propuesta no es correcto';
				END IF;
			ELSE 
				SELECT 'No existe el proyecto que desea acordar';
			END IF;
		ELSE
			SELECT 'El id proyecto no es correcto';
		END IF;
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `crear_cargo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `crear_cargo`( IN
	nombre_cargo_nuevo VARCHAR(50),
	descripcion_cargo_nuevo TEXT
)
BEGIN
	IF NOT EXISTS (SELECT id_cargo FROM CARGO WHERE nombre_cargo = nombre_cargo_nuevo) THEN
		INSERT INTO CARGO(
			nombre_cargo,
			descripcion_cargo
		) VALUES (
				nombre_cargo_nuevo,
				descripcion_cargo_nuevo
			);
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `crear_categoria` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `crear_categoria`( 
	IN nombre_categoria_nueva VARCHAR(50),
	IN descripcion_categoria_nueva TEXT
)
BEGIN
	IF NOT EXISTS (SELECT id_categoria FROM CATEGORIA WHERE nombre_categoria_hab = nombre_categoria_nueva) THEN
		INSERT INTO CATEGORIA(
			nombre_categoria_hab,
			descripcion_categoria
		) VALUES (
				nombre_categoria_nueva,
				descripcion_categoria_nueva
			);
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Crear_direccion_usuario_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Crear_direccion_usuario_final`(
    IN id_ciu BIGINT,
    IN id_uni BIGINT,
    IN calle VARCHAR(1000),
    IN num VARCHAR(1000),
    IN depart varchar(1000),
    IN tipo_dir BIGINT
)
BEGIN

IF (id_ciu > 0 AND id_ciu < 4294967295) THEN
	IF (id_uni > 0 AND id_uni < 4294967295) THEN
		IF (tipo_dir > 0 AND tipo_dir < 4294967295) THEN
			IF (length(calle) > 5 AND length(calle) < 50) THEN 
				IF (length(num) > 1 AND length(num) < 50) THEN 
					IF (length(depart) < 50) THEN
						IF EXISTS (SELECT * FROM CIUDAD WHERE ID_CIUDAD = id_ciu) then
							IF EXISTS (SELECT * FROM UNIVERSIDAD WHERE ID_UNIVERSIDAD = id_uni ) then
								IF (SELECT calle REGEXP '[^A-Za-z áÁéÉíÍóÓúÚ0-9]' = 1 or calle is null or calle = '') then
									SELECT 'Calle ingresada no es correcta';
								ELSE
									IF (SELECT num REGEXP '[^A-Za-z áÁéÉíÍóÓúÚ0-9]' = 1 or num is null or num = '') then
										SELECT 'numero ingresada no es correcta';
									ELSE
										IF (SELECT depart REGEXP '[^A-Za-z áÁéÉíÍóÓúÚ0-9]' = 1) then
											SELECT 'departamento ingresado contiene caracteres especiales';
										ELSE
											IF (tipo_dir < 0 ) then 
												SELECT 'el tipo de direccion es incorrecto' ;
											ELSE
												insert into DIRECCION ( 
												ID_CIUDAD, 
												ID_UNIVERSIDAD, 
												CALLE, 
												NUMERO, 
												DEPARTAMENTO, 
												TIPO_DIRECCION
												) values(id_ciu, id_uni, calle, num, depart, tipo_dir);
											END IF;
										END IF;
									END IF;
								END IF;
							ELSE
								SELECT 'La universidad no existe';
							END IF;
						ELSE
							SELECT 'La ciudad no existe';
						END IF;
                    END IF;
				END IF;
			END IF;
		ELSE
			SELECT 'el id indicado no es correcto';
		END IF;
	ELSE
		SELECT 'el id indicado no es correcto';
	END IF;
ELSE
	SELECT 'el id indicado no es correcto';
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `crear_empresa` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `crear_empresa`(
	IN nombre_empresa VARCHAR(50),
	IN run_empresa VARCHAR(20)
)
BEGIN
	IF NOT EXISTS (SELECT * FROM EMPRESA WHERE razon_social = nombre_empresa) THEN
		INSERT INTO EMPRESA(
			razon_social,
			run
		) VALUES (
			nombre_empresa,
			run_empresa
		);
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Crear_estudiante_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Crear_estudiante_final`(
	IN nombre_usuario VARCHAR(1000),
    IN apellido_padre VARCHAR(1000),
	IN apellido_madre VARCHAR(1000),
	IN email_usuario VARCHAR(1000), 
	IN password VARCHAR(1000),
	IN telefono_usuario VARCHAR(1000),
	IN genero_usuario CHAR(255),
	IN fecha_nac_usuario DATE,
    
    IN dir_habilitada BIGINT,
    IN dir_facturacion BIGINT,
    
    IN id_ciu BIGINT,
    IN id_uni BIGINT,
    IN calle VARCHAR(1000),
    IN num VARCHAR(1000),
    IN depart varchar(1000),
    IN tipo_dir BIGINT,
    
    IN grupo_privi BIGINT,
    
    IN idPais BIGINT, 
    IN cod_pais varchar(1000), 
    IN nombre_tipo_doc varchar(1000), 
    IN num_doc varchar(1000),
    
	IN id_usu BIGINT,
	IN id_dep BIGINT,
	IN id_estado_est BIGINT,
	IN num_matri  VARCHAR(1000),
	IN ingre BIGINT,
	IN carre VARCHAR(1000)
)
BEGIN
DECLARE id_usua BIGINT;
DECLARE id_univ BIGINT;
DECLARE nam_uni VARCHAR(1000);

IF (id_usu > 0 AND id_usu < 4294967295) THEN 
	IF (id_dep > 0 AND id_dep < 4294967295) THEN
		IF ( ingre > 2000 AND LENGTH(ingre) = 4 ) THEN
			IF (id_estado_est > 0 AND id_estado_est < 4294967295) THEN 
				IF ( length(num_matri) > 8 AND length(num_matri) < 20) THEN 
					 IF (length(carre) > 8 AND length(carre) < 100) THEN 
						IF (SELECT num_matri REGEXP '[^a-zA-Z0-9-]' = 1 or num_matri is null or num_matri = '') then
							SELECT 'El numero de matricula ingresado es incorrecto';
						ELSE
							IF (SELECT carre REGEXP '[^a-zA-Z áÁéÉíÍóÓúÚ]' = 1 or carre is null or carre = '') then
								SELECT 'La carrera ingresada no es correcta intente ingresando otra';
							ELSE
								IF ( SELECT id_usu REGEXP '[^0-9]' = 0 AND id_usu is not null ) then
									IF EXISTS ( SELECT * FROM USUARIO WHERE ID_USUARIO = id_usu ) then
										IF EXISTS (SELECT * FROM ESTUDIANTE WHERE ID_USUARIO = id_usu ) then
											SELECT 'Alumno ya se encuentra creado';
										ELSE
											call Asignar_grupo_privilegio_final(id_usu, 1);
											SELECT ID_UNIVERSIDAD FROM DEPARTAMENTO WHERE ID_DEPARTAMENTO = id_dep INTO id_univ;
											SELECT CODIGO_UNIVERSIDAD FROM UNIVERSIDAD WHERE ID_UNIVERSIDAD = id_univ INTO nam_uni;
											IF NOT EXISTS ( SELECT * FROM ESTUDIANTE WHERE CODIGO_ESTUDIANTE = CONCAT(nam_uni, num_matri)) then
												INSERT INTO ESTUDIANTE(ID_DEPARTAMENTO, ID_ESTADO_ESTUDIANTE, ID_USUARIO, NUMERO_MATRICULA, ANO_INGRESO, CARRERA, CODIGO_ESTUDIANTE)
												VALUES(id_dep, id_estado_est, id_usu, num_matri, ingre, carre, CONCAT(nam_uni, num_matri));
											ELSE
												SELECT 'EL codigo alumno ya existe';
											END IF;
										END IF;
									ELSE
										Select 'Alumno ya se encuentra creado';
									END IF;
								ELSE
									IF EXISTS (Select * from USUARIO where CORREO_ELECTRONICO = email_usuario) then 
										Select ID_USUARIO from USUARIO where CORREO_ELECTRONICO = email_usuario into id_usua;
										IF EXISTS (SELECT * FROM ESTUDIANTE WHERE ID_USUARIO = id_usua ) then
											SELECT 'alumno ya se encuentra creado';
										ELSE
											Select ID_USUARIO from USUARIO where CORREO_ELECTRONICO = email_usuario into id_usua;
											call Asignar_grupo_privilegio_final(id_usua, 1);
											SELECT ID_UNIVERSIDAD FROM DEPARTAMENTO WHERE ID_DEPARTAMENTO = id_dep INTO id_univ;
											SELECT CODIGO_UNIVERSIDAD FROM UNIVERSIDAD WHERE ID_UNIVERSIDAD = id_univ INTO nam_uni;
											IF NOT EXISTS ( SELECT * FROM ESTUDIANTE WHERE CODIGO_ESTUDIANTE = CONCAT(nam_uni, num_matri)) then
												INSERT INTO ESTUDIANTE(ID_DEPARTAMENTO, 
																	   ID_ESTADO_ESTUDIANTE, 
                                                                       ID_USUARIO, 
                                                                       NUMERO_MATRICULA, 
                                                                       ANO_INGRESO, 
                                                                       CARRERA, 
                                                                       CODIGO_ESTUDIANTE)
												VALUES(id_dep, id_estado_est, id_usua, num_matri, ingre, carre, CONCAT(nam_uni, num_matri));
											ELSE
												SELECT 'EL codigo alumno ya existe';
											END IF;
										END IF;
									ELSE
										call TBD_2019_1.crear_usuario_nuevo_final( 
											nombre_usuario, 
											apellido_padre,
											apellido_madre, 
											email_usuario,
											password,
											telefono_usuario,
											genero_usuario,
											fecha_nac_usuario,
											dir_habilitada,
											dir_facturacion, 
											id_ciu,
											id_uni,
											calle,
											num,
											depart,
											tipo_dir,
											grupo_privi,  
											idPais,
											cod_pais, 
											nombre_tipo_doc, 
											num_doc
										);
										Select ID_USUARIO from USUARIO where CORREO_ELECTRONICO = email_usuario into id_usua;
										SELECT ID_UNIVERSIDAD FROM DEPARTAMENTO WHERE ID_DEPARTAMENTO = id_dep INTO id_univ;
										SELECT CODIGO_UNIVERSIDAD FROM UNIVERSIDAD WHERE ID_UNIVERSIDAD = id_univ INTO nam_uni;
										IF NOT EXISTS ( SELECT * FROM ESTUDIANTE WHERE CODIGO_ESTUDIANTE = CONCAT(nam_uni, num_matri)) then
											INSERT INTO ESTUDIANTE(ID_DEPARTAMENTO, ID_ESTADO_ESTUDIANTE, ID_USUARIO, NUMERO_MATRICULA, ANO_INGRESO, CARRERA, CODIGO_ESTUDIANTE)
											VALUES(id_dep, id_estado_est, id_usua, num_matri, ingre, carre, CONCAT(nam_uni, num_matri));
										ELSE
											SELECT 'EL codigo alumno ya existe';
										END IF;
									END IF;
								END IF;
							END IF;
						END IF;
					 ELSE
						SELECT 'la carrera indicada no es correct';
                     END IF; 
				ELSE
					SELECT 'el numero de matricula no es correcto';
				END IF;
			ELSE
				SELECT 'el id ingresado no es correcto';
			END IF;
		ELSE
			SELECT 'El año ingresado no es correcto';
		END IF;
	ELSE
		SELECT 'el id ingresado no es correcto';
	END IF;
ELSE
	SELECT 'el id ingresado no es correcto';
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `crear_habilidad` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `crear_habilidad`( 
	IN nombre_habilidad_nueva VARCHAR(50),
	IN descripcion_habilidad_nueva TEXT,
	IN dificultad_habilidad_nueva INT,
	IN id_categoria_rel INT
)
BEGIN

DECLARE today_time DATETIME;
SELECT CURRENT_TIMESTAMP INTO today_time;

	IF NOT EXISTS (SELECT * FROM HABILIDAD WHERE nombre_habilidad = nombre_habilidad_nueva) then
		INSERT INTO HABILIDAD(
			nombre_habilidad,
			descripcion_habilidad,
			dificultad_habilidad
		) VALUES (
				nombre_habilidad_nueva,
				descripcion_habilidad_nueva,
				dificultad_habilidad_nueva
			);

		INSERT INTO CATEGORIA_HABILIDAD(
			id_categoria,
			id_habilidad,
			timestamp_cat_hab
		) VALUES (
				id_categoria_rel,
				LAST_INSERT_ID(),
				today_time
			);
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `crear_pago_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `crear_pago_final`( IN
	id_boleta_factura BIGINT,
	monto_pago FLOAT,
	fecha_emision VARCHAR(20)
)
BEGIN
	IF EXISTS (SELECT ID_BOLETA FROM BOLETA_FACTURA bf WHERE bf.ID_BOLETA = id_boleta_factura) THEN
		IF ((SELECT MONTO_NETO_USD FROM BOLETA_FACTURA bf WHERE bf.ID_BOLETA = id_boleta_factura) = monto_pago) THEN
			IF NOT EXISTS (SELECT id_pago FROM PAGO p WHERE p.ID_BOLETA = id_boleta_factura AND p.ESTADO_PAGO IN (1,2) AND p.SOFT_DELETE_PAGO = false) THEN
				IF (STR_TO_DATE(fecha_emision, "%Y-%m-%d %H:%i:%s") IS NOT NULL) THEN
					IF ((SELECT FECHA_BOLETA FROM BOLETA_FACTURA bf WHERE bf.ID_BOLETA = id_boleta_factura) <= STR_TO_DATE(fecha_emision, "%Y-%m-%d %H:%i:%s")) THEN
						INSERT INTO PAGO
							(ID_BOLETA, MONTO_PAGO, FECHA_EMISION, ESTADO_PAGO, SOFT_DELETE_PAGO)
						VALUES
							(id_boleta_factura, monto_pago, fecha_emision, 1, false);
						SELECT 'Pago fue ingresado con éxito.';
					ELSE
						SELECT 'La fecha ingresada es menor a la fecha de emisión de la boleta.';
					END IF;
				ELSE
					SELECT 'La fecha ingresada no es valida.';
				END IF;
			ELSE
				SELECT 'Boleta ya tiene un pago asociado.';
			END IF;
		ELSE
			SELECT 'El monto ingresado no es igual al monto indicado en la boleta.';
		END IF;
	ELSE
		SELECT 'Boleta referenciada no existe.';
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Crear_propuesta_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Crear_propuesta_final`(
    IN id_estudiante_interesado BIGINT,
	IN desc_prop TEXT,
	IN plazo_propuesto BIGINT,
	IN valor_propuesto FLOAT,
	IN id_est_prop BIGINT,
    
    IN id_proy BIGINT,
    IN fecha_term_prop DATETIME,
    IN fecha_ini_prop DATETIME,
    IN promedio_hab FLOAT
)
BEGIN
	DECLARE id_cat_proy BIGINT;
	DECLARE today DATETIME;
	DECLARE id_propuesta_nueva BIGINT;
	DECLARE id_acuerdo_nuevo BIGINT;
	SELECT NOW() INTO today;

	IF (id_estudiante_interesado < 0 or id_proy < 0) THEN 
		SELECT 'Los ids ingresados no son correctos';
	ELSE
		IF (SELECT desc_prop is null or desc_prop = '') then
			SELECT 'La descripción de la propuesta no puede ser vacía';
		ELSE /* Valida existencia de propuesta ya ingresada */
			IF ( SELECT id_estudiante_interesado REGEXP '[^0-9]' = 0 AND id_estudiante_interesado is not null ) then
				IF EXISTS ( SELECT * FROM ESTUDIANTE WHERE ID_ESTUDIANTE = id_estudiante_interesado ) then
					IF ( SELECT id_proy REGEXP '[^0-9]' = 0 AND id_proy is not null ) then
						IF EXISTS ( SELECT * FROM PROYECTO WHERE ID_PROYECTO = id_proy ) THEN
							IF (plazo_propuesto <= 0 OR plazo_propuesto > (SELECT plazo_maximo FROM PROYECTO WHERE ID_PROYECTO = id_proy) ) THEN
								IF valor_propuesto > 0 THEN
									IF fecha_ini_prop > today AND fecha_term_prop > today AND plazo_propuesto > 0  THEN
										INSERT INTO PROPUESTA ( /* Acuerdo aun no creado */
											ID_ESTUDIANTE,
											DESCRIPCION_PROPUESTA,
											FECHA_CREACION_PROPUESTA,
											PLAZO_PROPUESTA,
											VALOR_PROPUESTA_USD,
											ESTADO_PROPUESTA,
											SOFT_DELETE_PROPUESTA
											)
										VALUES (
											id_estudiante_interesado,
											desc_prop,
											today,
											plazo_propuesto,
											valor_propuesto,
											1, /* id estado prop = 1 => Presentada */
											0
											);

										SELECT MAX(ID_PROPUESTA) FROM PROPUESTA INTO id_propuesta_nueva;

										CALL TBD_2019_1.crear_acuerdo_final( 
											id_propuesta_nueva, 
											id_proy, 
											fecha_term_prop
											);

										SELECT MAX(ID_ACUERDO) FROM ACUERDO INTO id_acuerdo_nuevo;

										UPDATE PROPUESTA SET
											ID_ACUERDO = id_acuerdo_nuevo
										WHERE ID_PROPUESTA = id_propuesta_nueva;

									ELSE
										Select'Las fechas no pueden ser anteriores al día de hoy';
									END IF;
								ELSE
									Select'El valor propuesto no puede ser menor a 0';
								END IF;
							ELSE
								Select'El plazo propuesto no puede ser menor o igual a 0 días ni mayor al plazo máximo del proyecto';
							END IF;
						ELSE
							Select 'La categoria no existe en la plataforma';
						END IF;
					ELSE
						Select 'El id de categoria indicado está incorrecto';
					END IF;
				ELSE
					Select 'El representante no existe en la plataforma';
				END IF;
			ELSE
				Select 'El id de representante indicado está incorrecto';
			END IF;
		END IF;
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Crear_proyecto_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_AUTO_VALUE_ON_ZERO' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Crear_proyecto_final`(
    IN id_repre BIGINT,
	IN id_est_proyecto BIGINT,
	IN nom_proyecto VARCHAR(20000),
	IN desc_proyecto TEXT,
	IN plazo_max BIGINT,
	IN plazo_min BIGINT,
    IN precio bigint
)
BEGIN
DECLARE id_proy INT;
DECLARE id_cat_proy INT;
DECLARE today DATETIME;
SELECT NOW() INTO today;

IF (id_repre <= 0 or id_est_proyecto <= 0) then 
	SELECT 'Los ids ingresados no son correctos';
ELSE
	IF ( (plazo_max <= 0 OR plazo_max > 150) or (plazo_min <= 0 OR plazo_min > 10 ) or plazo_max < plazo_min ) THEN
		SELECT 'Los plazos ingresados no son validos, valor máximo de "plazo máximo" 150 días, valor mínimo de "plazo mínimo" 10';
	ELSE
		IF (SELECT nom_proyecto REGEXP '[^a-zA-Z0-9 áÁéÉíÍóÓúÚ]' = 1 or nom_proyecto is null or nom_proyecto = '' or length(nom_proyecto) > 50) THEN
			SELECT 'La nombre proyecto es incorrecto, intente ingresando otro';
		ELSE
			IF (desc_proyecto IS NULL OR length(desc_proyecto) < 15) THEN
				SELECT 'La descripción del proyecto no puede ser nula ni menor a 15 caracteres';
			ELSE
				IF ( SELECT id_repre REGEXP '[^0-9]' = 0 AND id_repre is not null ) THEN
					IF EXISTS ( SELECT * FROM REPRESENTANTE WHERE ID_REPRESENTANTE = id_repre ) THEN
						if(precio < 0 or precio is null)then
							select ID_RANGO_COSTO from RANGO_COSTO_CATEGORIA where (VALOR_MINIMO_USD <= 1 and VALOR_MAXIMO_USD >= 1) into id_cat_proy;
								INSERT INTO PROYECTO (
									ID_REPRESENTANTE,
									ID_ESTADO_PROYECTO,
                                    ID_RANGO_COSTO,
									NOMBRE_PROYECTO,
									FECHA__CREACION_PROYECTO,
									DESCRIPCION_PROYECTO,
									PLAZO_MAXIMO,
									PLAZO_MINIMO,
									FECHA_ACTUALIZAION_PROYECTO,
									SOFT_DELETE_PROYECTO,
                                    PRECIO
									)
								VALUES (
									id_repre,
									id_est_proyecto,
                                    id_cat_proy,
									nom_proyecto,
									today,
									desc_proyecto,
									plazo_max,
									plazo_min,
									today,
                                    0,
									1
									);
						ELSE
								select ID_RANGO_COSTO from RANGO_COSTO_CATEGORIA where (VALOR_MINIMO_USD <= precio and VALOR_MAXIMO_USD >= precio) into id_cat_proy;
								INSERT INTO PROYECTO (
									ID_REPRESENTANTE,
									ID_ESTADO_PROYECTO,
                                    ID_RANGO_COSTO,
									NOMBRE_PROYECTO,
									FECHA__CREACION_PROYECTO,
									DESCRIPCION_PROYECTO,
									PLAZO_MAXIMO,
									PLAZO_MINIMO,
									FECHA_ACTUALIZAION_PROYECTO,
									SOFT_DELETE_PROYECTO,
                                    PRECIO
									)
								VALUES (
									id_repre,
									id_est_proyecto,
                                    id_cat_proy,
									nom_proyecto,
									today,
									desc_proyecto,
									plazo_max,
									plazo_min,
									today,
                                    0,
									precio
									);
						END IF;
					ELSE
						Select 'El representante no existe en la plataforma';
					END IF;
				ELSE
					Select 'El id de representante indicado está incorrecto';
				END IF;
			END IF;
		END IF;
	END IF;
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `crear_representante_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `crear_representante_final`(
	IN id_user int,
	IN nombre_usuario VARCHAR(50),
    IN apellido_padre VARCHAR(50),
	IN apellido_madre VARCHAR(50),
	IN email_usuario VARCHAR(100),
	IN pass VARCHAR(20),
	IN telefono_usuario VARCHAR(50),
	IN genero_usuario CHAR(1),
	IN fecha_nac_usuario DATE,
    
    IN dir_habilitada INT,
    IN dir_facturacion INT,
    
    IN id_ciu INT,
    IN id_uni INT,
    IN calle VARCHAR(50),
    IN num VARCHAR(50),
    IN depart varchar(50),
    IN tipo_dir INT,
    
    IN grupo_privi INT,
    
    IN idPais int, 
    IN cod_pais varchar(2), 
    IN nombre_tipo_doc varchar(50), 
    IN num_doc varchar(50),
    
	IN cod_cargo int,
    IN nom_cargo varchar(50),
    IN cod_empresa int     
    )
BEGIN

DECLARE idUsuario int;
DECLARE cargo varchar(50);

if (select id_user REGEXP '[^0-9]' = 1 or id_user is NULL) then
	if exists (Select * from USUARIO where CORREO_ELECTRONICO = email_usuario) then 
		Select ID_USUARIO from USUARIO where CORREO_ELECTRONICO = email_usuario into idUsuario;
		if exists (Select ID_REPRESENTANTE from REPRESENTANTE where ID_USUARIO = idUsuario) then
			select 'El represemtamte existe';
		else
			if (select cod_cargo REGEXP '[^0-9]' = 1 or cod_cargo is NULL) then
				if (select nom_cargo regexp '[^A-Za-z áÁéÉíÍóÓúÚ]' = 1 or length(nom_cargo) < 4) then
					select 'Datos de representante mal ingresados';
				else
					if not exists (select * from CARGO where NOMBRE_CARGO = nom_cargo) then
						select 'El cargo para el representante no existe';
					else
						if (select cod_empresa REGEXP '[^0-9]' = 1 or cod_empresa is NULL) then
							select ID_CARGO from CARGO where NOMBRE_CARGO = nom_cargo into cargo;
							insert into REPRESENTANTE (ID_USUARIO, ID_CARGO) values (idUsuario, cargo);
						else
							if exists (select * from EMPRESA where ID_EMPRESA = cod_empresa) then
								select ID_CARGO from CARGO where NOMBRE_CARGO = nom_cargo into cargo;
								insert into REPRESENTANTE (ID_USUARIO, ID_CARGO, ID_EMPRESA) values (idUsuario, cargo, cod_empresa);
							else
								select 'La empresa indicada no existe';
							end if;
						end if;
					end if;
				end if;
			else
				if exists (select * from CARGO where ID_CARGO = cod_cargo) then
					insert into REPRESENTANTE (ID_USUARIO, ID_CARGO) values (idUsuario, cod_cargo);
				else 
					select 'El cargo no existe';
				end if;
			end if;
		end if;
	else
		call TBD_2019_1.crear_usuario_nuevo_final( 
			nombre_usuario, 
			apellido_padre,
			apellido_madre, 
			email_usuario,
			pass,
			telefono_usuario,
            genero_usuario,
			fecha_nac_usuario,
			dir_habilitada,
			dir_facturacion, 
			id_ciu,
			id_uni,
			calle,
			num,
			depart,
			tipo_dir,
			grupo_privi,  
			idPais,
			cod_pais, 
			nombre_tipo_doc, 
			num_doc
		);
		Select ID_USUARIO from USUARIO where CORREO_ELECTRONICO = email_usuario into idUsuario;
		if (select cod_cargo REGEXP '[^0-9]' = 1 or cod_cargo is NULL) then
			if (select nom_cargo regexp '[^A-Za-z áÁéÉíÍóÓúÚ]' = 1 or length(nom_cargo) < 4) then
				select 'Datos de representante mal ingresados';
			else
				if not exists (select * from CARGO where NOMBRE_CARGO = nom_cargo) then
					select 'El cargo para el representante no existe';
				else
					if (select cod_empresa REGEXP '[^0-9]' = 1 or cod_empresa is NULL) then
						select ID_CARGO from CARGO where NOMBRE_CARGO = nom_cargo into cargo;
						insert into REPRESENTANTE (ID_USUARIO, ID_CARGO) values (idUsuario, cargo);
					else
						if exists (select * from EMPRESA where ID_EMPRESA = cod_empresa) then
							select ID_CARGO from CARGO where NOMBRE_CARGO = nom_cargo into cargo;
							insert into REPRESENTANTE (ID_USUARIO, ID_CARGO, ID_EMPRESA) values (idUsuario, cargo, cod_empresa);
						else
							select 'La empresa indicada no existe';
						end if;
					end if;
				end if;
			end if;
		else
			if exists (select * from CARGO where ID_CARGO = cod_cargo) then
				insert into REPRESENTANTE (ID_USUARIO, ID_CARGO) values (idUsuario, cod_cargo);
			else 
				select 'El cargo no existe';
			end if;
		end if;
	end if;
else
	if exists (select * from USUARIO where ID_USUARIO = id_user) then
		if exists(select * from REPRESENTANTE where ID_USUARIO = id_user) then
			select 'El representante ya existe';
		else
			if (select cod_cargo REGEXP '[^0-9]' = 1 or cod_cargo is NULL) then
				if (select nom_cargo regexp '[^A-Za-záÁéÉíÍóÓúÚ]' = 1 or length(nom_cargo) < 4) then
					select 'Datos de representante mal ingresados';
				else
					if not exists (select * from CARGO where NOMBRE_CARGO = nom_cargo) then
						select 'El cargo para el representante no existe';
					else
						if (select cod_empresa REGEXP '[^0-9]' = 1 or cod_empresa is NULL) then
							select ID_CARGO from CARGO where NOMBRE_CARGO = nom_cargo into cargo;
							insert into REPRESENTANTE (ID_USUARIO, ID_CARGO) values (id_user, cargo);
						else
							if exists (select * from EMPRESA where ID_EMPRESA = cod_empresa) then
								select ID_CARGO from CARGO where NOMBRE_CARGO = nom_cargo into cargo;
								insert into REPRESENTANTE (ID_USUARIO, ID_CARGO, ID_EMPRESA) values (id_user, cargo, cod_empresa);
							else
								select 'La empresa indicada no existe';
							end if;
						end if;
					end if;
				end if;
			else
				if exists (select * from CARGO where ID_CARGO = cod_cargo) then
					insert into REPRESENTANTE (ID_USUARIO, ID_CARGO) values (id_user, cod_cargo);
				else 
					select 'El cargo no existe';
				end if;
			end if;
		end if;
	else
		select 'El usuario especificado no existe en la plataforma';
	end if;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `crear_requerimiento_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `crear_requerimiento_final`( IN 
	id_proy INT,
	desc_proy TEXT
)
BEGIN
	IF ( SELECT id_proy REGEXP '[^0-9]' = 0 AND id_proy is not null ) then
		IF EXISTS ( SELECT * FROM PROYECTO WHERE ID_PROYECTO = id_proy) THEN
			INSERT INTO REQUERIMIENTO (
				ID_PROYECTO,
				DESRIPCION_REQUERIMIENTO,
				DIFICULTAD_REQUERIMIENTO
				)
			VALUES (
				id_proy,
				desc_proy,
				0
				);
		ELSE
			SELECT 'No existe el proyecto indicado';
		END IF;
	ELSE
		SELECT 'El id proyecto está mal ingresado';
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `crear_usuario_nuevo_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `crear_usuario_nuevo_final`( 
	IN nombre_usuario VARCHAR(1000),
    IN apellido_padre VARCHAR(1000),
	IN apellido_madre VARCHAR(1000),
	IN email_usuario VARCHAR(1000),
	IN password VARCHAR(1000),
	IN telefono_usuario VARCHAR(1000),
	IN genero_usuario CHAR(255),
	IN fecha_nac_usuario DATE,
    
    
    IN dir_habilitada BIGINT,
    IN dir_facturacion BIGINT,
    
    IN id_ciu BIGINT,
    IN id_uni BIGINT,
    IN calle VARCHAR(1000),
    IN num VARCHAR(1000),
    IN depart VARCHAR(1000),
    IN tipo_dir BIGINT,
    
    IN grupo_privi BIGINT,
    
    IN idPais BIGINT, 
    IN cod_pais VARCHAR(1000),
    IN nombre_tipo_doc VARCHAR(1000), 
    IN num_doc VARCHAR(1000)
    
)
BEGIN

DECLARE today DATETIME;
DECLARE name_value  INT;
DECLARE id_usu INT;
SELECT NOW() INTO today;

IF ( SELECT nombre_usuario REGEXP '[[:digit:]]+' = 1 or nombre_usuario REGEXP '[^A-Za-z áÁéÉíÍóÓúÚ0-9]' = 1 or nombre_usuario is null or nombre_usuario = '' or LENGTH(nombre_usuario) < 3 or LENGTH(nombre_usuario) > 50) then
	select ' el nombre de usuario no es valido intente ingresando otro';
ELSE
	IF ( SELECT apellido_padre REGEXP '[[:digit:]]+' = 1 or apellido_padre REGEXP '[^A-Za-z áÁéÉíÍóÓúÚ0-9]' = 1 or apellido_padre is null or apellido_padre = '' or LENGTH(apellido_padre) < 3 or LENGTH(apellido_padre) > 50) then
		select 'el apellido paterno de usuario no es valido intente ingresando otro';
	ELSE
		IF ( SELECT apellido_madre REGEXP '[[:digit:]]+' = 1 or apellido_madre REGEXP '[^A-Za-z áÁéÉíÍóÓúÚ0-9]' = 1 or apellido_madre is null or apellido_madre = '' or LENGTH(apellido_madre) < 3 or LENGTH(apellido_madre) > 50) then
			SELECT 'el apellido materno de usuario no es valido intente ingresando otro';
		ELSE
			IF NOT ( SELECT email_usuario REGEXP '^[^@]+@[^@]+\.[a-zA-Z]{2,}$' = 1 or email_usuario is null or email_usuario = '' or LENGTH(email_usuario) < 3 or LENGTH(email_usuario) > 100) then
				SELECT 'El correo ingresado no es valido intente ingresando uno nuevo';
			ELSE
				IF ( SELECT telefono_usuario REGEXP '[^0-9]' = 1 OR LENGTH(telefono_usuario) < 9 or LENGTH(telefono_usuario) > 50) then
					SELECT 'El telefono de usuario no es correcto verifique que contenga 9 digitos';
				ELSE
					IF (LENGTH(password) < 7 or password REGEXP '[^A-Za-záÁéÉíÍóÓúÚ0-9]' = 1 or LENGTH(password) > 20) then
						SELECT 'El pasword de usuario no es correcto verifique que contenga mas de 8 caracteres';
					ELSE
						IF NOT (genero_usuario = 'M' OR genero_usuario = 'F' OR genero_usuario = 'O' or LENGTH(genero_usuario) > 1) then 
							SELECT 'El genero seleccionado no es correcto';
						ELSE
							IF NOT ( SELECT fecha_nac_usuario REGEXP '^([0-9]{4}[-/]?((0[13-9]|1[012])[-/]?(0[1-9]|[12][0-9]|30)|(0[13578]|1[02])[-/]?31|02[-/]?(0[1-9]|1[0-9]|2[0-8]))|([0-9]{2}(([2468][048]|[02468][48])|[13579][26])|([13579][26]|[02468][048])00)[-/]?02[-/]?29)$' = 1) then
								SELECT 'Fecha incorrecta';
							ELSE
								IF (YEAR(fecha_nac_usuario) = 0000) then 
									SELECT 'El año es incorrecto contiene 0000';
								ELSE
									IF NOT EXISTS ( SELECT CORREO_ELECTRONICO FROM USUARIO WHERE CORREO_ELECTRONICO = email_usuario) then 
										INSERT INTO USUARIO(
											nombre,
											apellido_paterno,
											apellido_materno,
											correo_electronico,
											telefono,
											genero,
											contrasena,
											fecha_nacimiento,
											fecha_ingreso_usuario,
											fecha_actualizacion_usuario,
											soft_delete_usuario
										) VALUES (
												nombre_usuario,
												apellido_padre,
												apellido_madre,
												email_usuario,
												telefono_usuario,
												genero_usuario,
												password,
												fecha_nac_usuario,
												today,
												today,
												0
											);
										SELECT ID_USUARIO FROM USUARIO WHERE CORREO_ELECTRONICO = email_usuario INTO id_usu;
										call Asignar_grupo_privilegio_final(id_usu, grupo_privi);
										call Asignar_direccion_usuario_final(id_usu, dir_habilitada, dir_facturacion, id_ciu, id_uni, calle, num, depart, tipo_dir);
										call ingresar_Documento_final(is_usu, idPais, cod_pais, nombre_tipo_doc, num_doc);
									ELSE
										SELECT 'El usuario ya existe dentro de la base de datos';
									END IF;
								END IF;
							END IF;
						END IF;
					END IF;
				END IF;
			END IF;
		END IF;
	END IF;
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `create_calificacion_estudiante_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `create_calificacion_estudiante_by_parameters`(
	IN id_estudiante INT,
    IN cal_estudiante INT,
    IN comentario_cal_estudiante TEXT
)
BEGIN
DECLARE today DATETIME;
SELECT NOW() INTO today;

if exists ( select * from ESTUDIANTE where ID_ESTUDIANTE = id_estudiante ) then
	if (cal_estudiante < 8  and cal_estudiante > 0 ) then 
		insert into CALIFICACION_ESTUDIANTE (ID_CALIFICACION_ESTUDIANTE, ID_ESTUDIANTE, CALIFICACION, COMENTARIO_CAL_ESTUDIANTE, FECHA_INGRESO_CALIFICACION)
		VALUES(LAST_INSERT_ID(), id_estudiante, cal_estudiante, comentario_cal_estudiante, today);
	end if;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `create_departamento_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `create_departamento_by_parameters`(
	IN id_uni INT,
	IN nombre_departamento VARCHAR(50)
)
BEGIN
if exists ( select * from UNIVERSIDAD where ID_UNIVERSIDAD = id_uni) then 
	if ( nombre_departamento is not NULL OR nombre_departamento != '') then 
		insert into DEPARTAMENTO(ID_UNIVERSIDAD, NOMBRE_DEPARTAMENTO)
		VALUES(id_uni, nombre_departamento);
	end if;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `create_estudiante_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `create_estudiante_by_parameters`(
	IN id_dep INT, 
	IN id_estado_est INT, 
	IN id_usuario INT, 
	IN num_matricula  VARCHAR(20),
	IN ingreso INT,
	IN carrera VARCHAR(100)
)
BEGIN 
if exists ( select * from USUARIO where ID_USUARIO = id_usuario) then
	if exists ( select * from DEPARTAMENTO where ID_DEPARTAMENTO = id_dep) then
		if exists (select * from ESTADO_ESTUDIANTE where ID_ESTADO_ESTUDIANTE = id_estado_est) then 	
			INSERT INTO ESTUDIANTE(ID_DEPARTAMENTO, ID_ESTADO_ESTUDIANTE, ID_USUARIO, NUMERO_MATRICULA, ANO_INGRESO, CARRERA)
			VALUES(id_dep, id_estado_est, id_usuario, num_matricula, ingreso, carrera);
        end if;
    end if;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `create_habilidades_estudiantes_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `create_habilidades_estudiantes_by_parameters`(
	IN id_estudiante INT,
	IN id_habilidad INT,
    IN dominio_habilidad INT
)
BEGIN
DECLARE today DATETIME;
SELECT NOW() INTO today;

if exists ( select * from ESTUDIANTE where ID_ESTUDIANTE = id_estudiante) then 
	if exists ( select * from HABILIDAD where ID_HABILIDAD = id_habilidad) then
		if ( dominio_habilidad < 6 ) then
			insert into HABILIDAD_ESTUDIANTE (ID_ESTUDIANTE, ID_HABILIDAD, DOMINIO_HABILIDAD, FECHA_ACTUALIZACION_HAB_ESTUDIANTE)
			VALUES(id_estudiante, id_habilidad, dominio_habilidad, today);
		end if;
	end if;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `create_propuesta_estudiante_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `create_propuesta_estudiante_by_parameters`(
    IN id_est INT,
    IN desc_prop TEXT,
    IN plazo_prop INT,
    IN valor_prop FLOAT
)
BEGIN

DECLARE today DATETIME;
SELECT NOW() INTO today;

if exists (select * from ESTUDIANTE where ID_ESTUDIANTE = id_est ) then
	insert into PROPUESTA (ID_ESTUDIANTE, DESCRIPCION_PROPUESTA, FECHA_CREACION_PROPUESTA, PLAZO_PROPUESTA, VALOR_PROPUESTA_USD, ESTADO_PROPUESTA)
    VALUE (id_est, desc_prop, today, plazo_prop, valor_prop, 0);
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `create_ranking_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `create_ranking_by_parameters`(
	IN id_estudiante INT,
	IN nombre_ranking VARCHAR(50),
	IN aprobacion BOOL
)
BEGIN
if exists ( select * from ESTUDIANTE where ID_ESTUDIANTE = id_estudiante) then
	insert into TEST_RANKING( ID_ESTUDIANTE, NOMBRE_RANKING, APROBACION )
	VALUES(id_estudiante, nombre_ranking, aprobacion);
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `create_tipo_test_ranking_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `create_tipo_test_ranking_by_parameters`(
    IN id_test_ranking INT, 
	IN tipo_conversion_ranking VARCHAR(50),
    IN valor_ranking VARCHAR(50),
	IN valor_convertido INT
)
BEGIN
if exists ( select * from TEST_RANKING where ID_TEST_RANKING = id_test_ranking) then
	insert into TIPO_TEST_RANKING(ID_TEST_RANKING, TIPO_CONVERSION_RANKNG, VALOR_RANKING, VALOR_CONVERTIDO)
	VALUES(id_test_ranking, tipo_conversion_ranking, valor_ranking, valor_convertido);
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `deleted_calificacion_estudiante_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `deleted_calificacion_estudiante_by_parameters`(
	IN id_cal_est INT
)
BEGIN
if exists ( select * from CALIFICACION_ESTUDIANTE where ID_CALIFICACION_ESTUDIANTE = id_cal_est ) then
	DELETE 
    FROM CALIFICACION_ESTUDIANTE
    WHERE ID_CALIFICACION_ESTUDIANTE = id_cal_est;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `deleted_estudiante_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `deleted_estudiante_by_parameters`(
	IN id_est INT
)
BEGIN

DECLARE id_usu INT;

if exists (SELECT * FROM ESTUDIANTE WHERE ID_ESTUDIANTE = id_est ) THEN 
	select ID_USUARIO FROM ESTUDIANTE WHERE ID_ESTUDIANTE = id_est INTO id_usu;
	
    UPDATE USUARIO SET 
	SOFT_DELETE_USUARIO = 0
	WHERE ID_USUARIO = id_usu;
    
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `deleted_tipo_test_ranking_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `deleted_tipo_test_ranking_by_parameters`(
    IN id_tipo_test_rank INT 
)
BEGIN
	if exists ( select * from TIPO_TEST_RANKING where ID_TIPO_TEST_RANKING = id_tipo_test_rank) then 
		DELETE 
        FROM TIPO_TEST_RANKING 
        WHERE ID_TIPO_TEST_RANKING = id_tipo_test_rank;
	end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `delete_departamento_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `delete_departamento_by_parameters`(
	IN id_dep INT
)
BEGIN
if exists ( select * from DEPARTAMENTO where ID_DEPARTAMENTO = id_dep) then 
	delete from DEPARTAMENTO where ID_DEPARTAMENTO = id_dep;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `delete_habilidades_estudiantes_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `delete_habilidades_estudiantes_by_parameters`(
	IN id_hab_est INT
)
BEGIN
	if exists ( select * from HABILIDAD_ESTUDIANTE where ID_HABILIDAD_ESTUDIANTE = id_hab_est) then
		DELETE 
        FROM HABILIDAD_ESTUDIANTE 
        WHERE ID_HABILIDAD_ESTUDIANTE = id_hab_est;
	end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `delete_propuesta_estudiante_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `delete_propuesta_estudiante_by_parameters`(
	IN id_prop INT
)
BEGIN
	if exists (select * from PROPUESTA where ID_PROPUESTA = id_prop) then
		DELETE
        FROM PROPUESTA
        WHERE ID_PROPUESTA = id_prop;
	end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `delete_ranking_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `delete_ranking_by_parameters`(
	IN id_test_rank INT
)
BEGIN
	if exists (SELECT * FROM TEST_RANKING WHERE ID_TEST_RANKING = id_test_rank) THEN
		DELETE 
        FROM TEST_RANKING 
        WHERE ID_TEST_RANKING = id_test_rank;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `eliminar_representante` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `eliminar_representante`( IN
	id_repre INT
)
BEGIN

DECLARE today DATETIME;
DECLARE id_usu INT;
SELECT NOW() INTO today;
SELECT ID_USUARIO FROM REPRESENTANTE where ID_REPRESENTANTE = id_repre INTO id_usu;

if exists (select * from REPRESENTANTE where ID_REPRESENTANTE = id_repre) then
		UPDATE USUARIO SET
			FECHA_ACTUALIZACION_USUARIO = today
		WHERE id_usuario = id_usu;

		UPDATE REPRESENTANTE SET
			ESTADO_REPRESENTANTE = 0
		WHERE ID_REPRESENTANTE = id_repre;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Ingresar_Documento_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Ingresar_Documento_final`(
	IN id_user int,
	IN idPais int,
	IN cod_pais varchar(5),
	IN nombre_tipo_doc varchar(50),
	IN num_doc varchar(50) 
)
BEGIN

DECLARE codigo varchar (50);
DECLARE cod_doc varchar (50);
DECLARE pais int;

if exists (select NOMBRE FROM USUARIO WHERE ID_USUARIO = id_user) then
	if (select idPais REGEXP '[^0-9]' = 1 or idPais is NULL) then
		if(cod_pais is null or length(cod_pais) > 3 or length(cod_pais) < 2) then 
			select 'datos de pais mal indicados';
		else
			if exists (select ID_PAIS from PAIS where CODIGO_PAIS = upper(cod_pais)) then
				if ( select nombre_tipo_doc regexp '[^A-Za-z]' = 1 or length(nombre_tipo_doc) < 3 or nombre_tipo_doc is null) then 
					select 'Nombre de documento invalido';
				else
					if (SELECT num_doc REGEXP '[^A-Za-z0-9-]' = 1 or length(num_doc) < 5) then
						select 'Numero de documento invalido';
					else
						Select concat(cod_pais,num_doc) into cod_doc;
						if exists (select ID_DOCUMENTO from TIPO_DOCUMENTO where CODIGO_DOCUMENTO = cod_doc) then
							select 'El documento ya existe, verifique los datos';
						else
							select ID_PAIS from PAIS where CODIGO_PAIS = upper(cod_pais) into pais;
							insert into TIPO_DOCUMENTO (ID_USUARIO, ID_PAIS, NOMBRE_TIPO, NUMERO_DOCUMENTO, CODIGO_DOCUMENTO)
							values (id_user, pais, nombre_tipo_doc, num_doc, cod_doc);
						end if;
					end if;
				end if;
			else
				select 'No existe el pais indicado';
			end if;
		end if;
	else
		if exists (select ID_PAIS from PAIS where ID_PAIS = idPais) then
				if ( select nombre_tipo_doc regexp '[^A-Za-z áÁéÉíÍóÓúÚ]' = 1 or length(nombre_tipo_doc) < 3 or nombre_tipo_doc is null) then 
					select 'Nombre de documento invalido';
				else
					if (SELECT num_doc REGEXP '[^a-zA-Z0-9-]' = 1 or length(num_doc) < 5) then
						select 'Numero de documento invalido';
					else
						select CODIGO_PAIS from PAIS where ID_PAIS = idPais into codigo;
						Select concat(codigo,num_doc) into cod_doc;
                        if exists (select ID_DOCUMENTO from TIPO_DOCUMENTO where CODIGO_DOCUMENTO = cod_doc) then
							select 'El documento ya existe, verifique los datos';
						else
							insert into TIPO_DOCUMENTO (ID_USUARIO, ID_PAIS, NOMBRE_TIPO, NUMERO_DOCUMENTO, CODIGO_DOCUMENTO)
                            values (id_user, idPais, nombre_tipo_doc, num_doc, cod_doc);
						end if;
					end if;
				end if;
		else
			SELECT 'el pais no existe';
        end if;
	end if;
else
	select 'Usuario no existe';
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Ingresar_Documento_final_beta` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Ingresar_Documento_final_beta`(
	IN id_user bigint,
	IN idPais bigint,
	IN cod_pais varchar(1000),
	IN nombre_tipo_doc varchar(1000),
	IN num_doc varchar(1000) 
)
BEGIN

DECLARE regex varchar (50);
DECLARE conteo INT;
DECLARE codigo varchar (50);
DECLARE cod_doc varchar (50);
DECLARE pais int;

if(select id_user REGEXP '[^0-9]' = 1 or id_user is NULL or id_user > 4294967295)then
	select 'ID usuario invalido';
else
	if exists (select NOMBRE FROM USUARIO WHERE ID_USUARIO = id_user) then
		if (select idPais REGEXP '[^0-9]' = 1 or idPais is NULL or idPais > 4294967295) then
			if(cod_pais is null or length(cod_pais) > 3 or length(cod_pais) < 2 or length(cod_paais) > 5) then 
				select 'datos de pais mal indicados';
			else
				if exists (select ID_PAIS from PAIS where CODIGO_PAIS = upper(cod_pais)) then
					if ( select nombre_tipo_doc regexp '[^A-Za-z]' = 1 or length(nombre_tipo_doc) < 3 or nombre_tipo_doc is null or length(nombre_tipo_doc) > 50 ) then 
						select 'Nombre de documento invalido';
					else
						IF ((Select AUTOCOMPLETAR FROM VALIDA_DOC_PAIS WHERE ID_PAIS = (SELECT ID_PAIS FROM PAIS WHERE CODIGO_PAIS = cod_pais)) != 0) then 
							IF EXISTS (SELECT * FROM TIPO_DOCUMENTO WHERE ID_USUARIO = id_user and ID_PAIS = (SELECT ID_PAIS FROM PAIS WHERE CODIGO_PAIS = cod_pais)) then
								SELECT 'Usuario ya cuenta con documentos asignados';
							ELSE
								SELECT COUNT(id_pais) FROM TIPO_DOCUMENTO WHERE ID_PAIS = (SELECT ID_PAIS FROM PAIS WHERE CODIGO_PAIS = cod_pais) INTO conteo;
								Select concat(cod_pais,(conteo + 1)) into cod_doc;
								insert into TIPO_DOCUMENTO (ID_USUARIO, ID_PAIS, NOMBRE_TIPO, NUMERO_DOCUMENTO, CODIGO_DOCUMENTO)
								values (id_user, pais, nombre_tipo_doc, num_doc, cod_doc);
							END IF;
						ELSE
							SELECT VALIDA_REGEX FROM VALIDA_DOC_PAIS WHERE ID_PAIS = (SELECT ID_PAIS FROM PAIS WHERE CODIGO_PAIS = cod_pais) INTO regex;
							if (SELECT num_doc REGEXP regex = 1 or length(num_doc) < 5 or num_doc is null or length(num_doc) > 50) then
								select 'Numero de documento invalido';
							else
								Select concat(cod_pais,num_doc) into cod_doc;
								if exists (select ID_DOCUMENTO from TIPO_DOCUMENTO where CODIGO_DOCUMENTO = cod_doc) then
									select 'El documento ya existe, verifique los datos';
								else
									select ID_PAIS from PAIS where CODIGO_PAIS = upper(cod_pais) into pais;
									insert into TIPO_DOCUMENTO (ID_USUARIO, ID_PAIS, NOMBRE_TIPO, NUMERO_DOCUMENTO, CODIGO_DOCUMENTO)
									values (id_user, pais, nombre_tipo_doc, num_doc, cod_doc);
								end if;
							end if;
						END IF;
					END IF;
				ELSE
					SELECT 'El pais no existe';
				END IF;
			END IF;
		else
			if exists (select ID_PAIS from PAIS where ID_PAIS = idPais) then
					if ( select nombre_tipo_doc regexp '[^A-Za-z]' = 1 or length(nombre_tipo_doc) < 3 or nombre_tipo_doc is null or length(nombre_tipo_doc)> 50) then 
						select 'Nombre de documento invalido';
					else
						IF ((Select AUTOCOMPLETAR FROM VALIDA_DOC_PAIS WHERE ID_PAIS = idPais) != 0) then 
							IF EXISTS (SELECT * FROM TIPO_DOCUMENTO WHERE ID_USUARIO = id_user and ID_PAIS = idPais) then
								SELECT 'usuario ya cuenta con documentos';
							ELSE
								SELECT COUNT(id_pais) FROM TIPO_DOCUMENTO WHERE ID_PAIS = idPais INTO conteo;
								SELECT CODIGO_PAIS FROM PAIS WHERE ID_PAIS = idPais INTO codigo;
								Select concat(codigo,(conteo + 1)) into cod_doc;
								insert into TIPO_DOCUMENTO (ID_USUARIO, ID_PAIS, NOMBRE_TIPO, NUMERO_DOCUMENTO, CODIGO_DOCUMENTO)
								values (id_user, idPais, nombre_tipo_doc, num_doc, cod_doc);
							END IF;
						ELSE
							SELECT CODIGO_PAIS FROM PAIS WHERE ID_PAIS = idPais INTO codigo;
							SELECT VALIDA_REGEX FROM VALIDA_DOC_PAIS WHERE ID_PAIS = idPais INTO regex;
							if (SELECT num_doc REGEXP regex = 1 or length(num_doc) < 5 or num_doc is null or length(num_doc)>50) then
								select 'Numero de documento invalido';
							else
								Select concat(codigo,num_doc) into cod_doc;
								if exists (select ID_DOCUMENTO from TIPO_DOCUMENTO where CODIGO_DOCUMENTO = cod_doc) then
									select 'El documento ya existe, verifique los datos';
								else
									select ID_PAIS from PAIS where CODIGO_PAIS = upper(cod_pais) into pais;
									insert into TIPO_DOCUMENTO (ID_USUARIO, ID_PAIS, NOMBRE_TIPO, NUMERO_DOCUMENTO, CODIGO_DOCUMENTO)
									values (id_user, idPais, nombre_tipo_doc, num_doc, cod_doc);
								end if;
							end if;
						END IF;
					END IF;
			else
				SELECT 'el pais no existe';
			end if;
		end if;
	else
		select 'Usuario no existe';
	end if;
end if;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `listar_cargos` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `listar_cargos`( )
BEGIN
	SELECT * FROM CARGO ORDER BY nombre_cargo;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `listar_categorias` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `listar_categorias`( )
BEGIN
	SELECT * FROM CATEGORIA ORDER BY nombre_categoria;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `listar_empresas` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `listar_empresas`( )
BEGIN
	SELECT * FROM EMPRESA ORDER BY razon_social;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `listar_habilidades` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `listar_habilidades`( )
BEGIN
	SELECT * FROM HABILIDAD ORDER BY nombre_habilidad;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `listar_representante` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `listar_representante`()
BEGIN
	Select ID_REPRESENTANTE, NOMBRE, APELLIDO_PATERNO, GENERO, TELEFONO, CORREO_ELECTRONICO  from REPRESENTANTE join USUARIO where REPRESENTANTE.ID_USUARIO=USUARIO.ID_USUARIO;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `listar_representante_by_parametro` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `listar_representante_by_parametro`(
	IN id_repre INT
)
BEGIN
	if exists (select * from REPRESENTANTE where ID_REPRESENTANTE = id_repre) then
		Select ID_REPRESENTANTE, NOMBRE, APELLIDO_PATERNO, GENERO, TELEFONO, CORREO_ELECTRONICO  from REPRESENTANTE join USUARIO where REPRESENTANTE.ID_USUARIO=USUARIO.ID_USUARIO and ID_REPRESENTANTE = id_repre ;
	end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `listar_tutoriales` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `listar_tutoriales`( IN
	id_habilidad_rel INT
)
BEGIN
	SELECT * FROM TUTORIAL WHERE id_habilidad = id_habilidad_rel ORDER BY nombre_categoria;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `list_all_habilidades_estudiantes` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `list_all_habilidades_estudiantes`(
	IN id_hab_est INT
)
BEGIN
	select * from HABILIDAD_ESTUDIANTE;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `list_all_propuestas` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `list_all_propuestas`()
BEGIN
	select * from PROPUESTA;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `list_all_propuestas_by_estudiante_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `list_all_propuestas_by_estudiante_by_parameters`(
	IN id_prop INT
)
BEGIN

DECLARE id_est INT;

	if exists (select * from PROPUESTA where ID_PROPUESTA = id_prop ) then
		select ID_ESTUDIANTE from PROPUESTA where ID_PROPUESTA = id_prop INTO id_est;
        select * from PROPUESTA WHERE ID_ESTUDIANTE = id_est;
    end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `list_all_test_ranking` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `list_all_test_ranking`(
)
BEGIN
	select * from test_ranking;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `list_all_tipo_test_ranking` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `list_all_tipo_test_ranking`()
BEGIN
	select * from TIPO_TEST_RANKING;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `list_calificacion_estudiante_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `list_calificacion_estudiante_by_parameters`(
	IN id_calificacion_estudiante INT
)
BEGIN
if exists ( select * from CALIFICACION_ESTUDIANTE where ID_CALIFICACION_ESTUDIANTE = id_calificacion_estudiante ) then
	select * from CALIFICACION_ESTUDIANTE where ID_CALIFICACION_ESTUDIANTE = id_calificacion_estudiante;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `list_departamento_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `list_departamento_by_parameters`(
	IN id_uni INT,
    IN id_dep INT
)
BEGIN
if exists (SELECT * FROM UNIVERSIDAD WHERE ID_UNIVERSIDAD = id_uni) then
	if exists ( SELECT * FROM DEPARTAMENTO WHERE ID_DEPARTAMENTO = id_dep ) then
		SELECT * FROM DEPARTAMENTO WHERE ID_DEPARTAMENTO = id_dep;
	end if;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `list_estudiante_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `list_estudiante_by_parameters`(
	IN id_est INT, 
	IN id_usu INT
)
BEGIN 
if exists ( select * from USUARIO where ID_USUARIO = id_usu and SOFT_DELETE_USUARIO = 1) then
	select * from ESTUDIANTE where ID_ESTUDIANTE = id_est;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `list_habilidades_estudiantes_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `list_habilidades_estudiantes_by_parameters`(
	IN id_hab_est INT
)
BEGIN
if exists ( select * from HABILIDAD_ESTUDIANTE where ID_HABILIDAD_ESTUDIANTE = id_hab_est) then 
	select * from HABILIDAD_ESTUDIANTE where ID_HABILIDAD_ESTUDIANTE = id_hab_est;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `list_propuesta_estudiante_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `list_propuesta_estudiante_by_parameters`(
	IN id_prop INT
)
BEGIN
	if exists (select * from PROPUESTA where ID_PROPUESTA = id_prop ) then
		select * from PROPUESTA where ID_PROPUESTA = id_prop;
    end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `list_test_ranking_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `list_test_ranking_by_parameters`(
    IN id_estudiante INT,
    IN id_test_ranking INT
)
BEGIN
	if exists ( select * from estudiante where ID_ESTUDIANTE = id_estudiante) then
		if exists ( select * from test_ranking where ID_TEST_RANKING = id_test_ranking) then
			select * from test_ranking where ID_TEST_RANKING = id_test_ranking;
        end if;
	end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `list_tipo_test_ranking_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `list_tipo_test_ranking_by_parameters`(
    IN id_tip_test_rank INT
)
BEGIN
	if exists ( select * from TIPO_TEST_RANKING where ID_TIPO_TEST_RANKING = id_tip_test_rank) then
		select * from TIPO_TEST_RANKING where ID_TIPO_TEST_RANKING = id_tip_test_rank;
	end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `modificar_cargo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `modificar_cargo`( IN
	id_cargo_mod INT,
	nombre_cargo_mod VARCHAR(50),
	descripcion_cargo_mod TEXT
)
BEGIN
	IF EXISTS (SELECT id_cargo FROM CARGO WHERE id_cargo = id_cargo_mod) THEN
		UPDATE CARGO SET
			nombre_cargo = nombre_cargo_mod,
			descripcion_cargo = descripcion_cargo_mod
		WHERE id_cargo = id_cargo_mod;
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `modificar_categoria` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `modificar_categoria`( IN
	id_categoria_mod INT,
	nombre_categoria_mod VARCHAR(50),
	descripcion_categoria_mod TEXT
)
BEGIN
	IF EXISTS (SELECT id_categoria FROM CATEGORIA WHERE id_categoria = id_categoria_mod) THEN
		UPDATE CARGO SET
			nombre_cargo = nombre_categoria_mod,
			descripcion_cargo = descripcion_categoria_mod
		WHERE id_cargo = id_categoria_mod;
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `modificar_empresa` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `modificar_empresa`( IN
	id_empresa_mod INT,
	nombre_empresa VARCHAR(50),
	run_empresa VARCHAR(20)
)
BEGIN
	IF EXISTS (SELECT id_empresa FROM EMPRESA WHERE id_empresa = id_empresa_mod) THEN
		UPDATE EMPRESA SET
			razon_social = nombre_empresa,
			run = run_empresa
		WHERE id_empresa = id_empresa_mod;
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `modificar_habilidad` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `modificar_habilidad`(
	IN id_habilidad_mod INT,
	IN nombre_habilidad_mod VARCHAR(50),
	IN descripcion_habilidad_mod TEXT,
	IN dificultad_habilidad_mod INT
)
BEGIN
	IF EXISTS (SELECT id_habilidad FROM HABILIDAD WHERE id_habilidad = id_habilidad_mod) THEN
		UPDATE HABILIDAD SET
			nombre_habilidad = nombre_habilidad_mod,
			descripcion_habilidad = descripcion_habilidad_mod,
			dificultad_habilidad = dificultad_habilidad_mod
		WHERE id_habilidad = id_habilidad_mod;
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `modificar_tutorial` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `modificar_tutorial`( 
	IN id_tutorial_mod INT,
	IN id_habilidad_rel INT,
	IN nombre_tutorial_mod VARCHAR(50),
	IN dificultad_tutorial_mod INT,
	IN url_tutorial_mod VARCHAR(2083)
)
BEGIN
	IF EXISTS (SELECT id_tutorial FROM TUTORIAL WHERE id_tutorial = id_tutorial_mod) THEN
		UPDATE CARGO SET
			id_habilidad = id_habilidad_rel,
			nombre_tutorial = nombre_tutorial_mod,
			dificultad = dificultad_tutorial_mod,
			url_tutorial = url_tutorial_mod
		WHERE id_tutorial = id_tutorial_mod;
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mostrar_acuerdos_por_estado` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `mostrar_acuerdos_por_estado`(IN 
	estado_acuerdo BIGINT
)
BEGIN
	SELECT
	*
	FROM ACUERDO a
		WHERE a.ESTADO_ACUERDO = estado_acuerdo
		AND a.SOFT_DELETE_ACUERDO = false;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mostrar_acuerdos_por_estado_y_proyecto` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `mostrar_acuerdos_por_estado_y_proyecto`(IN 
	estado_acuerdo BIGINT, 
	id_proyecto BIGINT
)
BEGIN
	IF EXISTS (SELECT ID_PROYECTO FROM PROYECTO p WHERE p.ID_PROYECTO = id_proyecto AND p.SOFT_DELETE_PROYECTO = false) THEN 
		SELECT
			*
		FROM ACUERDO a
			WHERE a.ESTADO_ACUERDO = estado_acuerdo
			AND a.ID_PROYECTO = id_proyecto
			AND a.SOFT_DELETE_ACUERDO = false;
	ELSE 
		SELECT "Id de proyecto ingresado no existe.";
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Mostrar_boletas_pagadas_empresa` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Mostrar_boletas_pagadas_empresa`(
	IN id_emp BIGINT
)
BEGIN
IF (id_emp > 0 AND id_emp < 4294967295 AND id_emp is not null) THEN 
	IF EXISTS ( SELECT * FROM EMPRESAS WHERE ID_EMPRESA = id_emp) THEN
		SELECT * 
		FROM BOLETA_FACTURA as b
		JOIN ACUERDO as a ON a.ID_ACUERDO = b.ID_ACUERDO
		JOIN PROYECTO as p ON p.ID_PROYECTO = a.ID_PROYECTO
		JOIN REPRESENTANTE as rep ON rep.ID_REPRESENTANTE = p.ID_REPRESENTANTE
		JOIN EMPRESA as emp ON emp.ID_EMPRESA = rep.ID_EMPRESA
		WHERE emp.ID_EMPRESA = id_emp;
	ELSE
		SELECT 'La empresa que desea encontrar no existe en la base de datos';
    END IF;
ELSE
	SELECT 'Los valores ingresados no son validos';
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Mostrar_boletas_pagadas_estudiantes` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Mostrar_boletas_pagadas_estudiantes`(
	IN id_est BIGINT
)
BEGIN
IF (id_est > 0 AND id_est < 4294967295 AND id_est is not null) THEN 
	IF EXISTS ( SELECT * FROM ESTUDIANTE WHERE ID_ESTUDIANTE = id_est) THEN
		SELECT b.* 
		FROM BOLETA_FACTURA as b
		JOIN ACUERDO as a ON a.ID_ACUERDO = b.ID_ACUERDO AND a.SOFT_DELETE_CUERDO = 0
		JOIN PROPUESTA as p ON p.ID_PROPUESTA = a.ID_PROPUESTA
		JOIN ESTUDIANTE as es ON es.ID_ESTUDIANTE = p.ID_ESTUDIANTE
        WHERE es.ID_ESTUDIANTE = id_est;
	ELSE
		SELECT 'El estudiante que desea encontrar no existe en la base de datos';
    END IF;
ELSE
	SELECT 'Los valores ingresados no son validos';
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Mostrar_boletas_pagadas_por_universidad` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Mostrar_boletas_pagadas_por_universidad`(
	IN id_uni BIGINT
)
BEGIN
IF (id_uni > 0 AND id_uni < 4294967295 AND id_uni is not null) THEN 
	IF EXISTS ( SELECT * FROM UNIVERSIDAD WHERE ID_UNIVERSIDAD = id_uni) THEN
		SELECT b.* 
		FROM BOLETA_FACTURA as b
		JOIN ACUERDO as a ON a.ID_ACUERDO = b.ID_ACUERDO
		JOIN PROPUESTA as p ON p.ID_PROPUESTA = a.ID_PROPUESTA
		JOIN ESTUDIANTE as es ON es.ID_ESTUDIANTE = p.ID_ESTUDIANTE
		JOIN DEPARTAMENTO as dp ON dp.ID_DEPARTAMENTO = es.ID_DEPARTAMENTO
		JOIN UNIVERSIDAD as uni ON uni.ID_UNIVERSIDAD = dp.ID_UNIVERSIDAD
		WHERE uni.ID_UNIVERSIDAD = id_uni;
	ELSE 
		SELECT ' La universidad ingresada no se encuentra dentro de la base de datos';
    END IF;
ELSE
	SELECT 'El numero ingresado no es valido';
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Mostrar_boletas_por_estado` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Mostrar_boletas_por_estado`(
	IN id_estado_bol BIGINT
)
BEGIN
	IF (id_estado_bol > 0 AND id_estado_bol < 4294967295 and id_estado_bol is not null) THEN
		IF EXISTS (SELECT * FROM ESTADO_BOLETA WHERE ID_ESTADO_BOLETA = id_estado_bol) THEN
			SELECT * FROM BOLETA_FACTURA; 
		ELSE
			SELECT 'la boleta que desea buscar no se encuentra en la base de datos';
		END IF;
	ELSE
		SELECT 'El numero ingresado no es valido';
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mostrar_calificaciones_eestudiante` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `mostrar_calificaciones_eestudiante`()
BEGIN
	select * from CALIFICACION_ESTUDIANTE;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mostrar_departamentos` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `mostrar_departamentos`(
	IN id_uni INT,
    IN id_dep INT
)
BEGIN
	SELECT * FROM DEPARTAMENTO;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Mostrar_Empresas` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Mostrar_Empresas`()
BEGIN
	SELECT * FROM EMPRESAS;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Mostrar_empresa_por_ciudad` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Mostrar_empresa_por_ciudad`(
	IN id_ciu BIGINT
)
BEGIN
IF (id_ciu > 0 AND id_ciu < 4294967295 AND id_ciu is not null) THEN 
	IF EXISTS ( SELECT * FROM CIUDAD WHERE ID_CIUDAD = id_ciu) THEN
		SELECT e.*
		FROM EMPRESA as e
		JOIN REPRESENTANTE as rep ON rep.ID_EMPRESA = e.ID_EMPRESA
		JOIN USUARIO as us ON rep.ID_USUARIO = us.ID_USUARIO and us.SOFT_DELETE_USUARIO = 0
		JOIN DIRECCION_USUARIO as dir_us ON dir_us.ID_USUARIO = us.ID_USUARIO
		JOIN DIRECCION as dir ON dir.ID_DIRECCION = dir_us.ID_DIRECCION 
		JOIN CIUDAD as ciu ON ciu.ID_CIUDAD = dir.ID_CIUDAD
		WHERE ciu.ID_CIUDAD = id_ciu;
	ELSE
		SELECT 'La ciudad indicada no existe dentro de la base de datos';
    END IF;
ELSE
	SELECT 'El numero ingresado no es correcto';
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Mostrar_empresa_por_pais` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Mostrar_empresa_por_pais`(
	IN id_pais BIGINT
)
BEGIN
IF (id_pais > 0 AND id_pais < 4294967295 AND id_pais is not null) THEN 
	IF EXISTS ( SELECT * FROM PAIS WHERE ID_PAIS = id_pais) THEN
		SELECT e.*
		FROM EMPRESA as e
		JOIN REPRESENTANTE as rep ON rep.ID_EMPRESA = e.ID_EMPRESA
		JOIN USUARIO as us ON rep.ID_USUARIO = us.ID_USUARIO and us.SOFT_DELETE_USUARIO = 0
		JOIN DIRECCION_USUARIO as dir_us ON dir_us.ID_USUARIO = us.ID_USUARIO
		JOIN DIRECCION as dir ON dir.ID_DIRECCION = dir_us.ID_DIRECCION 
		JOIN CIUDAD as ciu ON ciu.ID_CIUDAD = dir.ID_CIUDAD
		JOIN PAIS as p ON p.ID_PAIS = ciu.ID_PAIS
		WHERE p.ID_PAIS = id_pais;
	ELSE
		SELECT 'El pais indicado no existe dentro de la base de datos';
    END IF;
ELSE
	SELECT 'El numero ingresado no es correcto';
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Mostrar_empresa_por_region` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Mostrar_empresa_por_region`(
	IN id_reg BIGINT
)
BEGIN
IF (id_reg > 0 AND id_reg < 4294967295 AND id_reg is not null) THEN 
	IF EXISTS ( SELECT * FROM REGION_ESTADO WHERE ID_REGION = id_reg) THEN
		SELECT e.*
		FROM EMPRESA as e
		JOIN REPRESENTANTE as rep ON rep.ID_EMPRESA = e.ID_EMPRESA
		JOIN USUARIO as us ON rep.ID_USUARIO = us.ID_USUARIO and us.SOFT_DELETE_USUARIO = 0
		JOIN DIRECCION_USUARIO as dir_us ON dir_us.ID_USUARIO = us.ID_USUARIO
		JOIN DIRECCION as dir ON dir.ID_DIRECCION = dir_us.ID_DIRECCION 
		JOIN CIUDAD as ciu ON ciu.ID_CIUDAD = dir.ID_CIUDAD
		JOIN REGION_ESTADO as reg ON reg.ID_REGION = ciu.ID_REGION
		WHERE reg.ID_REGION = id_reg;
	ELSE
		SELECT 'La region indicada no existe dentro de la base de datos';
    END IF;
ELSE
	SELECT 'El numero ingresado no es correcto';
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mostrar_estudiantes_habilitados_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `mostrar_estudiantes_habilitados_final`()
BEGIN 
	Select ID_ESTUDIANTE, NOMBRE, APELLIDO_PATERNO, GENERO, TELEFONO, CORREO_ELECTRONICO, NUMERO_MATRICULA, ANO_INGRESO, CARRERA  from ESTUDIANTE join USUARIO where ESTUDIANTE.ID_USUARIO=USUARIO.ID_USUARIO and USUARIO.SOFT_DELETE_USUARIO != 0;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mostrar_estudiantes_por_departamento` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `mostrar_estudiantes_por_departamento`( IN
	id_departamento BIGINT
)
BEGIN
	IF EXISTS (SELECT ID_DEPARTAMENTO FROM DEPARTAMENTO d WHERE d.ID_DEPARTAMENTO = id_departamento) THEN 
		SELECT * FROM ESTUDIANTE e WHERE e.ID_DEPARTAMENTO = id_departamento;
	ELSE 
		SELECT "Id departamento ingresado no existe";
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mostrar_estudiantes_por_estado` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `mostrar_estudiantes_por_estado`( IN
	id_estado_estudiante BIGINT
)
BEGIN
	IF EXISTS (SELECT ID_ESTADO_ESTUDIANTE FROM ESTADO_ESTUDIANTE ee WHERE ee.ID_ESTADO_ESTUDIANTE = id_estado_estudiante) THEN 
		SELECT * FROM ESTUDIANTE e WHERE e.ID_ESTADO_ESTUDIANTE = id_estado_estudiante;
	ELSE 
		SELECT "Id estado estudiante ingresado no existe";
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mostrar_estudiantes_por_rango_de_calificacion` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `mostrar_estudiantes_por_rango_de_calificacion`(IN 
	calificacion_inicial FLOAT, 
	calificacion_final FLOAT
)
BEGIN
	IF(calificacion_final >= calificacion_inicial) THEN
		IF(calificacion_inicial BETWEEN 1 AND 5 && calificacion_final BETWEEN 1 AND 5) THEN
			SELECT
				*
			FROM (
				SELECT
					e.*, AVG(ce.CALIFICACION) AS PROM_CALIFICACION
				FROM ESTUDIANTE e
					INNER JOIN CALIFICACION_ESTUDIANTE ce ON ce.ID_ESTUDIANTE = e.ID_ESTUDIANTE
				GROUP BY
					e.ID_ESTUDIANTE
			) AS R
			WHERE
				R.PROM_CALIFICACION BETWEEN calificacion_inicial AND calificacion_final;
		ELSE
			SELECT
				"Calificaciones deben estar entre 1 y 5";
		END IF;
	ELSE
		SELECT
			"La calificación final ingresada debe ser mayor o igual que la calificación inicial ingresada";
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mostrar_estudiantes_por_rango_de_calificacion_y_habilidad` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `mostrar_estudiantes_por_rango_de_calificacion_y_habilidad`(IN 
	calificacion_inicial FLOAT, 
	calificacion_final FLOAT,
	id_habilidad BIGINT
)
BEGIN
	IF(calificacion_final >= calificacion_inicial) THEN
		IF(calificacion_inicial BETWEEN 1 AND 5 && calificacion_final BETWEEN 1 AND 5) THEN
			IF EXISTS(SELECT ID_HABILIDAD FROM HABILIDAD h WHERE h.ID_HABILIDAD = id_habilidad) THEN 
				SELECT
					*
				FROM (
					SELECT
						e.*,
						AVG(he.DOMINIO_HABILIDAD) AS PROM_DOM_HABILIDAD
					FROM
						ESTUDIANTE e
						INNER JOIN HABILIDAD_ESTUDIANTE he ON he.ID_HABILIDAD_ESTUDIANTE = e.ID_ESTUDIANTE
							AND he.ID_HABILIDAD = id_habilidad
						GROUP BY
							e.ID_ESTUDIANTE) AS R
				WHERE
					R.PROM_DOM_HABILIDAD BETWEEN calificacion_inicial
					AND calificacion_final;
			ELSE 
				SELECT "Id de habilidad ingresado no existe.";
			END IF;
		ELSE
			SELECT
				"Calificaciones deben estar entre 1 y 5.";
		END IF;
	ELSE
		SELECT
			"La calificación final ingresada debe ser mayor o igual que la calificación inicial ingresada.";
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mostrar_estudiantes_por_universidad` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `mostrar_estudiantes_por_universidad`( IN
	id_universidad BIGINT
)
BEGIN
	IF EXISTS (SELECT ID_UNIVERSIDAD FROM UNIVERSIDAD u WHERE u.ID_UNIVERSIDAD = id_universidad) THEN 
		SELECT e.* FROM ESTUDIANTE e
			INNER JOIN DEPARTAMENTO d ON e.ID_DEPARTAMENTO = d.ID_DEPARTAMENTO AND d.ID_UNIVERSIDAD = id_universidad
		;
	ELSE 
		SELECT "Id universidad ingresado no existe";
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Mostrar_pais` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Mostrar_pais`(in nom_pais varchar(50), id_pais INT)
BEGIN
if (nom_pais = '') then
	if (id_pais = -1) then
		select * from PAIS;
	end if;
elseif (nom_pais = '') then
	if (id_pais != -1) then
		select * from PAIS where ID_PAIS = id_uni;
	end if;
elseif (nom_pais != '') then
	if (id_pais = -1) then
		select * from PAIS where NOMBRE_PAIS = nom_pais;
    end if;
else
	select * from PAIS where NOMBRE_PAIS = nom_pais and ID_PAIS = id_pais ;
end if;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Mostrar_propuestas` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Mostrar_propuestas`()
BEGIN
	SELECT * FROM PROPUESTA;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Mostrar_propuestas_por_estudiante` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Mostrar_propuestas_por_estudiante`(
	IN id_est BIGINT
)
BEGIN
	IF (id_est > 0 AND id_est < 4294967295 AND id_est is not null) THEN 
		IF EXISTS ( SELECT * FROM ESTUDIANTE WHERE ID_ESTUDIANTE = id_est ) THEN
			SELECT ID_PROPUESTA, es.ID_ESTUDIANTE, usu.NOMBRE
			FROM PROPUESTA as p
			JOIN ESTUDIANTE as es ON es.ID_ESTUDIANTE = p.ID_ESTUDIANTE
            JOIN USUARIO as usu ON es.ID_USUARIO = usu.ID_USUARIO
			WHERE es.ID_ESTUDIANTE = id_est and SOFT_DELETE_PROPUESTA = 0;
        ELSE
			SELECT 'El id estudiante ingresado no se encuentra dentro de la base de datos';
        END IF;
	ELSE
		SELECT 'El dato ingresado no son correctos';
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Mostrar_propuestas_por_proyecto` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Mostrar_propuestas_por_proyecto`(
	IN id_proy BIGINT
)
BEGIN
	IF (id_proy > 0 AND id_proy < 4294967295 AND id_proy is not null) THEN 
		IF EXISTS ( SELECT * FROM PROYECTO WHERE ID_PROYECTO = id_proy AND SOFT_DELETE_PROYECTO = 0) THEN
			SELECT pro.*
            FROM PROPUESTA as p
            JOIN ACUERDO as a ON a.ID_PROPUESTA = p.ID_PROPUESTA AND SOFT_DELETE_ACUERDO = 0
            JOIN PROYECTO as pro on pro.ID_PROYECTO = a.ID_PROYECTO AND SOFT_DELETE_ACUERDO = 0
            WHERE pro.ID_PROYECTO = id_proy and SOFT_DELETE_PROPUESTA = 0;
        ELSE
			SELECT 'El proyecto indicado no existe en la base de datos';
        END IF;
	ELSE
		SELECT 'Los parametros ingresados no son validos';
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Mostrar_propuestas_por_universidad` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Mostrar_propuestas_por_universidad`(
	IN id_uni BIGINT
)
BEGIN
	IF (id_uni > 0 AND id_uni < 4294967295 AND id_uni is not null) THEN 
		IF EXISTS ( SELECT * FROM UNIVERSIDAD WHERE ID_UNIVERSIDAD = id_uni ) THEN
			SELECT ID_PROPUESTA, uni.ID_UNIVERSIDAD, uni.NOMBRE_UNIVERSIDAD
			FROM PROPUESTA as p
			JOIN ESTUDIANTE as es ON es.ID_ESTUDIANTE = p.ID_ESTUDIANTE
			JOIN DEPARTAMENTO as dp ON dp.ID_DEPARTAMENTO = es.ID_DEPARTAMENTO
			JOIN UNIVERSIDAD as uni ON uni.ID_UNIVERSIDAD = dp.ID_UNIVERSIDAD
			WHERE uni.ID_UNIVERSIDAD = id_uni and SOFT_DELETE_PROPUESTA = 0;
        ELSE
			SELECT 'El id de la universidad no existe dentro de la base de datos';
        END IF;
    ELSE 
		SELECT 'El dato indicado no se encuentra de forma correcto';
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mostrar_proyectos` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `mostrar_proyectos`()
BEGIN
	SELECT * FROM PROYECTO p WHERE p.SOFT_DELETE_PROYECTO = false;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mostrar_proyectos_por_empresa` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `mostrar_proyectos_por_empresa`( IN
	id_empresa BIGINT
)
BEGIN
	IF EXISTS (SELECT ID_EMPRESA FROM EMPRESA e WHERE e.ID_EMPRESA = id_empresa) THEN
		SELECT p.* FROM PROYECTO p
			INNER JOIN REPRESENTANTE r ON p.ID_REPRESENTANTE = r.ID_REPRESENTANTE AND r.ID_EMPRESA = id_empresa AND p.SOFT_DELETE_PROYECTO = false
		;
	ELSE
		SELECT 'Id de empresa ingresado no existe.';
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mostrar_proyectos_por_estado` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `mostrar_proyectos_por_estado`( IN
	id_estado_proyecto BIGINT
)
BEGIN
	IF EXISTS (SELECT ID_ESTADO_PROYECTO FROM ESTADO_PROYECTO ep WHERE ep.ID_ESTADO_PROYECTO = id_estado_proyecto) THEN
		SELECT p.* FROM PROYECTO p
			INNER JOIN ESTADO_PROYECTO ep ON ep.ID_ESTADO_PROYECTO = p.ID_ESTADO_PROYECTO AND ep.ID_ESTADO_PROYECTO = id_estado_proyecto AND p.SOFT_DELETE_PROYECTO = false
		;
	ELSE
		SELECT 'Id de estado de proyecto ingresado no existe.';
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mostrar_proyectos_por_estudiante` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `mostrar_proyectos_por_estudiante`( IN
	id_estudiante BIGINT
)
BEGIN
	IF EXISTS (SELECT ID_ESTUDIANTE FROM ESTUDIANTE e WHERE e.ID_ESTUDIANTE = id_estudiante) THEN
		SELECT p.* FROM PROYECTO p
			INNER JOIN ACUERDO a ON a.ID_PROYECTO = p.ID_PROYECTO AND a.ESTADO_ACUERDO = 2 AND a.SOFT_DELETE_ACUERDO = false
			INNER JOIN PROPUESTA pr ON pr.ID_ACUERDO = a.ID_ACUERDO AND pr.SOFT_DELETE_PROPUESTA = false AND pr.ID_ESTUDIANTE = id_estudiante
		;
	ELSE
		SELECT 'Id de estudiante ingresado no existe.';
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mostrar_proyectos_por_rango_fecha_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `mostrar_proyectos_por_rango_fecha_final`( IN
	fecha_inicial VARCHAR(20),
	fecha_final VARCHAR(20)
)
BEGIN
	IF (STR_TO_DATE(fecha_inicial, "%Y-%m-%d") IS NOT NULL) THEN
		IF (STR_TO_DATE(fecha_final, "%Y-%m-%d") IS NOT NULL) THEN
			IF(STR_TO_DATE(fecha_inicial, "%Y-%m-%d") <= STR_TO_DATE(fecha_final, "%Y-%m-%d")) THEN
				SELECT * FROM PROYECTO p WHERE DATE_FORMAT(p.FECHA__CREACION_PROYECTO, "%Y-%m-%d") >= fecha_inicial AND DATE_FORMAT(p.FECHA__CREACION_PROYECTO, "%Y-%m-%d") <= fecha_final;
			ELSE 
				SELECT "La fecha inicial debe ser menor o igual que la fecha final.";
			END IF;
		ELSE
			SELECT "La fecha final ingresada no tiene un formato válido.";
		END IF;
	ELSE
		SELECT "La fecha inicial ingresada no tiene un formato válido.";
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mostrar_proyectos_por_representante` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `mostrar_proyectos_por_representante`( IN
	id_representante BIGINT
)
BEGIN
	IF EXISTS (SELECT ID_REPRESENTANTE FROM REPRESENTANTE r WHERE r.ID_REPRESENTANTE = id_representante) THEN
		SELECT p.* FROM PROYECTO p
			INNER JOIN REPRESENTANTE r ON p.ID_REPRESENTANTE = r.ID_REPRESENTANTE AND r.ID_REPRESENTANTE = id_representante AND p.SOFT_DELETE_PROYECTO = false
		;
	ELSE
		SELECT 'Id de representante ingresado no existe.';
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Mostrar_universidad` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Mostrar_universidad`(in nombre_uni varchar(50), id_uni INT)
BEGIN
if (nombre_uni = '') then
	if (id_uni = -1) then
		select * from UNIVERSIDAD;
	end if;
elseif (nombre_uni = '') then
	if (id_uni != -1) then
		select * from UNIVERSIDAD where ID_UNIVERSIDAD = id_uni;
	end if;
elseif (nombre_uni != '') then
	if (id_uni = -1) then
		select * from UNIVERSIDAD where NOMBRE_UNIVERSIDAD = nombre_uni;
    end if;
else
	select * from UNIVERSIDAD where NOMBRE_UNIVERSIDAD = nombre_uni and ID_UNIVERSIDAD = id_uni ;
end if;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mostrar_usuarios_estudiante_total_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `mostrar_usuarios_estudiante_total_final`()
BEGIN 
	Select ID_ESTUDIANTE, NOMBRE, APELLIDO_PATERNO, GENERO, TELEFONO, CORREO_ELECTRONICO, NUMERO_MATRICULA, ANO_INGRESO, CARRERA  from ESTUDIANTE join USUARIO where ESTUDIANTE.ID_USUARIO=USUARIO.ID_USUARIO;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `prorrogar_acuerdo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `prorrogar_acuerdo`( 
	IN id_acuerdo_aplazado INT,
	IN datetime_nuevo_termino DATETIME
)
BEGIN

DECLARE today DATETIME;
SELECT NOW() INTO today;

	IF EXISTS (SELECT id_acuerdo FROM ACUERDO WHERE id_acuerdo = id_acuerdo_rechazado) THEN
		UPDATE ACUERDO SET
			fecha_termino_tentativa = datetime_nuevo_termino,
			fecha_actualizacion_acuerdo = today,
			estado_acuerdo = 5, /* estado 5 = aplazado */
			soft_delete_acuerdo = 1
		WHERE id_acuerdo = id_acuerdo_aplazado;
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `prorrogar_acuerdo_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `prorrogar_acuerdo_final`( IN
	id_acuerdo_aplazado INT,
	datetime_nuevo_termino DATETIME
)
BEGIN
	DECLARE today DATETIME;
	SELECT NOW() INTO today;

	IF ( id_acuerdo_aplazado < 0 ) then 
		SELECT 'Los ids ingresados no son correctos';
	ELSE
		IF ( SELECT id_acuerdo_aplazado REGEXP '[^0-9]' = 0 AND id_acuerdo_aplazado is not null ) THEN
			IF EXISTS (SELECT id_acuerdo FROM Acuerdo WHERE id_acuerdo = id_acuerdo_aplazado) THEN
				UPDATE Acuerdo SET
					fecha_termino_tentativa = datetime_nuevo_termino,
					fecha_actualizacion_acuerdo = today,
					estado_acuerdo = 5, /* estado 5 = aplazado */
					soft_delete_acuerdo = 0
				WHERE id_acuerdo = id_acuerdo_aplazado;
			ELSE 
				SELECT 'No existe el acuerdo que desea aplazar';
			END IF;
		ELSE
			SELECT 'El acuerdo indicado está incorrecto';
		END IF;
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `rechazar_acuerdo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `rechazar_acuerdo`( IN
	id_acuerdo_rechazado INT
)
BEGIN

DECLARE today DATETIME;
SELECT NOW() INTO today;

	IF EXISTS (SELECT id_acuerdo FROM ACUERDO WHERE id_acuerdo = id_acuerdo_rechazado) THEN
		UPDATE ACUERDO SET
			fecha_inicio_trabajo = today,
			fecha_actualizacion_acuerdo = today,
			estado_acuerdo = 3, /* estado 3 = rechazado */
			soft_delete_acuerdo = 0
		WHERE id_acuerdo = id_acuerdo_rechazado;
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `rechazar_acuerdo_final` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `rechazar_acuerdo_final`( IN
	id_acuerdo_rechazado INT
)
BEGIN
	DECLARE today DATETIME;
	SELECT NOW() INTO today;

	IF ( id_acuerdo_rechazado < 0 ) then 
		SELECT 'Los ids ingresados no son correctos';
	ELSE
		IF ( SELECT id_acuerdo_rechazado REGEXP '[^0-9]' = 0 AND id_acuerdo_rechazado is not null ) THEN
			IF EXISTS (SELECT id_acuerdo FROM Acuerdo WHERE id_acuerdo = id_acuerdo_rechazado) THEN
				UPDATE Acuerdo SET
					fecha_inicio_trabajo = today,
					fecha_actualizacion_acuerdo = today,
					estado_acuerdo = 3, /* estado 3 = rechazado */
					soft_delete_acuerdo = 1
				WHERE id_acuerdo = id_acuerdo_rechazado;
			ELSE 
				SELECT 'No existe el acuerdo que desea rechazar';
			END IF;
		ELSE
			SELECT 'El acuerdo indicado está incorrecto';
		END IF;
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `update_calificacion_estudiante_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `update_calificacion_estudiante_by_parameters`(
    IN id_est INT,
    IN id_cal_est INT,
    IN cal_est INT,
    IN com_cal_est TEXT
)
BEGIN
DECLARE cal INT;
DECLARE coment TEXT;
DECLARE today DATETIME;
SELECT NOW() INTO today;


if exists ( select * from ESTUDIANTE where ID_ESTUDIANTE = id_est ) then
	if exists ( select * from CALIFICACION_ESTUDIANTE where ID_CALIFICACION_ESTUDIANTE = id_cal_est ) then 
		SELECT CALIFICACION FROM CALIFICACION_ESTUDIANTE where ID_CALIFICACION_ESTUDIANTE = id_cal_est INTO cal;
        SELECT COMENTARIO_CAL_ESTUDIANTE FROM CALIFICACION_ESTUDIANTE where ID_CALIFICACION_ESTUDIANTE = id_cal_est INTO coment;
        if ( cal_est != cal and cal_est > 0 or cal_est < 8) then
			update CALIFICACION_ESTUDIANTE set 
			CALIFICACION = cal_est
			where ID_CALIFICACION_ESTUDIANTE = id_cal_est;
		end if;
        if ( coment != com_Cal_est ) then
			update CALIFICACION_ESTUDIANTE set 
			COMENTARIO_CAL_ESTUDIANTE = com_Cal_est
			where ID_CALIFICACION_ESTUDIANTE = id_cal_est;
		end if;
        update CALIFICACION_ESTUDIANTE set 
		FECHA_INGRESO_CALIFICACION = today
		where ID_CALIFICACION_ESTUDIANTE = id_cal_est;
	end if;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `update_departamento_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `update_departamento_by_parameters`(
	IN id_dep INT,
	IN nom_dep VARCHAR(50)
)
BEGIN
DECLARE nombre_depart VARCHAR(50);

if exists ( select NOMBRE_DEPARTAMENTO from DEPARTAMENTO where ID_DEPARTAMENTO = id_dep) then
	SELECT NOMBRE_DEPARTAMENTO FROM DEPARTAMENTO where ID_DEPARTAMENTO = id_dep INTO nombre_depart;
    if ( nombre_depart != nom_dep) then
		update DEPARTAMENTO set 
		NOMBRE_DEPARTAMENTO = nom_dep
		where ID_DEPARTAMENTO = id_dep;
	end if;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `update_estudiante_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `update_estudiante_by_parameters`(
	IN id_est INT,
	IN carr VARCHAR(100)
)
BEGIN
DECLARE ingreso INT;
DECLARE carrera_s VARCHAR(50);
DECLARE matricula VARCHAR(50);


if exists ( select NUMERO_MATRICULA, ANO_INGRESO, CARRERA from ESTUDIANTE  where ID_ESTUDIANTE = id_est ) then
    SELECT CARRERA FROM ESTUDIANTE where ID_ESTUDIANTE = id_est INTO carrera_s;
	if ( carrera_s != carr) then
		update ESTUDIANTE set
		CARRERA = carr
		where ID_ESTUDIANTE= id_est;
	end if;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `update_habilidades_estudiantes_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `update_habilidades_estudiantes_by_parameters`(
	IN id_hab_est INT,
    IN dom_hab INT
)
BEGIN
DECLARE today DATETIME;
SELECT NOW() INTO today;

if exists ( select * from HABILIDAD_ESTUDIANTE where ID_HABILIDAD_ESTUDIANTE = id_hab_est) then 
	if (dom_hab < 6 and dom_hab > 0 ) then 
		update HABILIDAD_ESTUDIANTE set 
		DOMINIO_HABILIDAD = dom_hab,
        FECHA_ACTUALIZACION_HAB_ESTUDIANTE = today
		where ID_HABILIDAD_ESTUDIANTE = id_hab_est; 
	end if;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Update_impuesto` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Update_impuesto`(in nom_pais varchar(50), id_pais int, nombre_imp varchar(50), impuesto float)
BEGIN
if (nom_pais = '') then
	if (id_pais = -1) then
		select "no se ha especificado correctamente a quien corresponde el impuesto";
	elseif (id_pais != -1) then
   		if exists (select PORCENTAJE_IMPUESTO from PAIS where ID_PAIS = id_pais) then
			insert into IMPUESTO (ID_PAIS, NOMBRE_IMPUESTO, PORCENTAJE_IMPUESTO, FECHA_ACTUALIZACION_IMPUESTO) 
            values(id_pais, nombre_imp, impuesto, now());
		else 
			select "El pais no existe";
		end if;
	end if;
elseif (nom_pais != '') then
	if (id_pais = -1) then
		if exists (select ID_PAIS from PAIS where NOMBRE_PAIS = nom_pais) then
			insert into IMPUESTO (ID_PAIS, NOMBRE_IMPUESTO, PORCENTAJE_IMPUESTO, FECHA_ACTUALIZACION_IMPUESTO) 
            values((select ID_PAIS from PAIS where NOMBRE_PAIS = nom_pais), nombre_imp, impuesto, now());
		else 
			select "El pais no existe";
		end if;
	elseif (id_pais != -1) then
		if exists (select ID_PAIS from PAIS where ID_PAIS = id_pais and NOMBRE_PAIS = nom_pais) then
			insert into IMPUESTO (ID_PAIS, NOMBRE_IMPUESTO, PORCENTAJE_IMPUESTO, FECHA_ACTUALIZACION_IMPUESTO) 
            values(id_pais, nombre_imp, impuesto, now());
		else 
			select "El pais señalado no coinciden sus datos";
		end if;
	end if;
else
	select "no se han entregado datos del pais asociado al impuesto";
end if;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Update_pais` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Update_pais`(in nom_pais varchar(50), id_pais INT)
BEGIN
if (nom_pais = '') then
	if (id_pais = -1) then
		select "No se han entregado parametros a actualizar";
	end if;
elseif (nom_pais = '') then
	if (id_pais != -1) then
		select "el nombre para el pais no es valido para actualizar";
	end if;
elseif (nom_pais != '') then
	if (id_pais = -1) then
		select "el pais a actualizar no fue identificada";
    end if;
else
	update PAIS set NOMBRE_PAIS = nom_pais where ID_PAIS = id_pais ;
end if;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `update_ranking_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `update_ranking_by_parameters`(
	IN id_test_rank INT,
	IN nom_rank VARCHAR(50),
	IN aprob INT
)
BEGIN

DECLARE aproba INT;
DECLARE nom_ranking VARCHAR(50);

	if exists ( select NOMBRE_RANKING, APROBACION from TEST_RANKING where ID_TEST_RANKING = id_test_rank) then
		select NOMBRE_RANKING from TEST_RANKING where ID_TEST_RANKING = id_test_rank INTO nom_ranking;
        select  APROBACION from TEST_RANKING where ID_TEST_RANKING = id_test_rank INTO aproba;
		if ( aproba != aprob AND aprob > -1 and aprob < 2 ) then 
			update TEST_RANKING set 
			APROBACION = aprob 
			where ID_TEST_RANKING = id_test_rank;
		end if;
		if ( nom_ranking != nom_rank ) then
			update TEST_RANKING set 
			NOMBRE_RANKING = nom_rank 
			where ID_TEST_RANKING = id_test_rank;
		end if;
	end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `update_tipo_test_ranking_by_parameters` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `update_tipo_test_ranking_by_parameters`(
	IN id_tipo_test_rank INT,
	IN tipo_conversion_rank VARCHAR(50),
    IN valor_rank VARCHAR(50),
	IN valor_conver INT
)
BEGIN
DECLARE conversion_ranking VARCHAR(50);
DECLARE ranking VARCHAR(50);
DECLARE convertido INT; 

if exists (select TIPO_CONVERSION_RANKING, VALOR_RANKING, VALOR_CONVERTIDO from TIPO_TEST_RANKING where ID_TIPO_TEST_RANKING = id_tipo_test_rank) then
	
    select TIPO_CONVERSION_RANKING from TIPO_TEST_RANKING where ID_TIPO_TEST_RANKING = id_tipo_test_rank INTO conversion_Ranking;
    select VALOR_RANKING from TIPO_TEST_RANKING where ID_TIPO_TEST_RANKING = id_tipo_test_rank INTO ranking;
    select VALOR_CONVERTIDO from TIPO_TEST_RANKING where ID_TIPO_TEST_RANKING = id_tipo_test_rank INTO convertido;
    
    if ( conversion_Ranking != tipo_conversion_rank ) then
		update TIPO_TEST_RANKING set 
		TIPO_CONVERSION_RANKING = tipo_conversion_rank
		where ID_TIPO_TEST_RANKING = id_tipo_test_rank;
	end if;
	if ( ranking != valor_rank ) then
		update TIPO_TEST_RANKING set 
		VALOR_RANKING = valor_rank
		where ID_TIPO_TEST_RANKING = id_tipo_test_rank;
	end if;
	if ( convertido != valor_conver) then
		update TIPO_TEST_RANKING set 
		VALOR_CONVERTIDO = valor_conver
		where ID_TIPO_TEST_RANKING = id_tipo_test_rank;
	end if;
end if;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Update_universidad` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `Update_universidad`(in nombre_uni varchar(50), id_uni INT)
BEGIN
if (nombre_uni = '') then
	if (id_uni = -1) then
		select "No se han entregado parametros a actualizar";
	end if;
elseif (nombre_uni = '') then
	if (id_uni != -1) then
		select "el nombre para la universidad no es valido para actualizar";
	end if;
elseif (nombre_uni != '') then
	if (id_uni = -1) then
		select "la universidad a actualizar no fue identificada";
    end if;
else
	update UNIVERSIDAD set NOMBRE_UNIVERSIDAD = nombre_uni where ID_UNIVERSIDAD = id_uni ;
end if;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `validar_email_prueba` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `validar_email_prueba`(
	IN email_usuario VARCHAR(50),
	IN id_usu INT,
	IN id_dep INT,
	IN id_estado_est INT,
	IN num_matri  VARCHAR(20),
	IN ingre INT,
	IN carre VARCHAR(100)
)
BEGIN
DECLARE id_usua INT;
DECLARE id_univ INT;
DECLARE nam_uni VARCHAR(50);

IF ( id_dep < 0 or id_estado_est < 0) then 
	SELECT 'Los ids ingresados no son correctos';
ELSE
	IF NOT ( ingre > 2000 AND LENGTH(ingre) = 4 ) then 
		SELECT 'El dato ingresado no es correcto';
	ELSE 
		IF (SELECT num_matri REGEXP '[^a-zA-Z0-9-]' = 1 or num_matri is null or num_matri = '') then
			SELECT 'El numero de matricula ingresado es incorrecto';
		ELSE
			IF (SELECT carre REGEXP '[^a-zA-Z]' = 1 or carre is null or carre = '') then
				SELECT 'La carrera ingresada no es correcta intente ingresando otra';
			ELSE
				IF ( SELECT id_usu REGEXP '[^0-9]' = 0 AND id_usu is not null ) then
					IF EXISTS ( SELECT * FROM USUARIO WHERE ID_USUARIO = id_usu ) then
						IF EXISTS (SELECT * FROM ESTUDIANTE WHERE ID_USUARIO = id_usu ) then
							SELECT 'alumno ya se encuentra creado';
						ELSE
							SELECT ID_UNIVERSIDAD FROM DEPARTAMENTO WHERE ID_DEPARTAMENTO = id_dep INTO id_univ;
                            SELECT CODIGO_UNIVERSIDAD FROM UNIVERSIDAD WHERE ID_UNIVERSIDAD = id_univ INTO nam_uni;
                            IF NOT EXISTS ( SELECT * FROM ESTUDIANTE WHERE CODIGO_ESTUDIANTE = CONCAT(nam_uni, num_matri)) then
								INSERT INTO ESTUDIANTE(ID_DEPARTAMENTO, ID_ESTADO_ESTUDIANTE, ID_USUARIO, NUMERO_MATRICULA, ANO_INGRESO, CARRERA, CODIGO_ESTUDIANTE)
								VALUES(id_dep, id_estado_est, id_usu, num_matri, ingre, carre, CONCAT(nam_uni, num_matri));
							ELSE
								SELECT 'EL codigo alumno ya existe';
							END IF;
						END IF;
					ELSE
						Select 'El usuario no existe en la plataforma';
					END IF;
				ELSE
					IF EXISTS (Select * from USUARIO where CORREO_ELECTRONICO = email_usuario) then 
						Select ID_USUARIO from USUARIO where CORREO_ELECTRONICO = email_usuario into id_usua;
                        IF EXISTS (SELECT * FROM ESTUDIANTE WHERE ID_USUARIO = id_usua ) then
							SELECT 'alumno ya se encuentra creado';
						ELSE
							Select ID_USUARIO from USUARIO where CORREO_ELECTRONICO = email_usuario into id_usua;
							SELECT ID_UNIVERSIDAD FROM DEPARTAMENTO WHERE ID_DEPARTAMENTO = id_dep INTO id_univ;
                            SELECT CODIGO_UNIVERSIDAD FROM UNIVERSIDAD WHERE ID_UNIVERSIDAD = id_univ INTO nam_uni;
                            IF NOT EXISTS ( SELECT * FROM ESTUDIANTE WHERE CODIGO_ESTUDIANTE = CONCAT(nam_uni, num_matri)) then
								INSERT INTO ESTUDIANTE(ID_DEPARTAMENTO, ID_ESTADO_ESTUDIANTE, ID_USUARIO, NUMERO_MATRICULA, ANO_INGRESO, CARRERA, CODIGO_ESTUDIANTE)
								VALUES(id_dep, id_estado_est, id_usua, num_matri, ingre, carre, CONCAT(nam_uni, num_matri));
							ELSE
								SELECT 'EL codigo alumno ya existe';
							END IF;
						END IF;
					ELSE
						call TBD_2019_1.crear_usuario_nuevo_final( 
							nombre_usuario, 
							apellido_padre,
							apellido_madre, 
							email_usuario,
							pass,
							telefono_usuario,
							genero_usuario,
							fecha_nac_usuario,
							dir_habilitada,
							dir_facturacion, 
							id_ciu,
							id_uni,
							calle,
							num,
							depart,
							tipo_dir,
							grupo_privi,  
							idPais,
							cod_pais, 
							nombre_tipo_doc, 
							num_doc
						);
                        Select ID_USUARIO from USUARIO where CORREO_ELECTRONICO = email_usuario into id_usua;
                        SELECT ID_UNIVERSIDAD FROM DEPARTAMENTO WHERE ID_DEPARTAMENTO = id_dep INTO id_univ;
						SELECT CODIGO_UNIVERSIDAD FROM UNIVERSIDAD WHERE ID_UNIVERSIDAD = id_univ INTO nam_uni;
						IF NOT EXISTS ( SELECT * FROM ESTUDIANTE WHERE CODIGO_ESTUDIANTE = CONCAT(nam_uni, num_matri)) then
							INSERT INTO ESTUDIANTE(ID_DEPARTAMENTO, ID_ESTADO_ESTUDIANTE, ID_USUARIO, NUMERO_MATRICULA, ANO_INGRESO, CARRERA, CODIGO_ESTUDIANTE)
							VALUES(id_dep, id_estado_est, id_usua, num_matri, ingre, carre, CONCAT(nam_uni, num_matri));
						ELSE
							SELECT 'EL codigo alumno ya existe';
						END IF;
					END IF;
				END IF;
			END IF;
		END IF;
	END IF;
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2019-07-18 13:49:38
